{
  "_args": [
    [
      {
        "raw": "memfs@^2.5.3",
        "scope": null,
        "escapedName": "memfs",
        "name": "memfs",
        "rawSpec": "^2.5.3",
        "spec": ">=2.5.3 <3.0.0",
        "type": "range"
      },
      "/Users/thoriqnurfaizal/Documents/GitHub/AdvancedReact/Backend/node_modules/prisma-generate-schema/node_modules/prisma-cli-engine"
    ]
  ],
  "_from": "memfs@^2.5.3",
  "_hasShrinkwrap": false,
  "_id": "memfs@2.10.1",
  "_location": "/memfs",
  "_nodeVersion": "10.11.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/memfs_2.10.1_1538152955519_0.558691009619112"
  },
  "_npmUser": {
    "name": "streamich",
    "email": "vadimsdaleckis@gmail.com"
  },
  "_npmVersion": "6.4.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "memfs@^2.5.3",
    "scope": null,
    "escapedName": "memfs",
    "name": "memfs",
    "rawSpec": "^2.5.3",
    "spec": ">=2.5.3 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/prisma-cli-engine",
    "/prisma-generate-schema/prisma-cli-engine"
  ],
  "_resolved": "https://registry.npmjs.org/memfs/-/memfs-2.10.1.tgz",
  "_shasum": "4f10c96c3e377fc43494cc3e010bc24ab103af07",
  "_shrinkwrap": null,
  "_spec": "memfs@^2.5.3",
  "_where": "/Users/thoriqnurfaizal/Documents/GitHub/AdvancedReact/Backend/node_modules/prisma-generate-schema/node_modules/prisma-cli-engine",
  "bugs": {
    "url": "https://github.com/streamich/memfs/issues"
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/mol-conventional-changelog"
    }
  },
  "dependencies": {
    "fast-extend": "0.0.2",
    "fs-monkey": "^0.3.3"
  },
  "description": "In-memory file-system with Node's fs API.",
  "devDependencies": {
    "@types/jest": "23.3.2",
    "@types/node": "9.6.32",
    "cpy-cli": "2.0.0",
    "jest": "21.2.1",
    "jest-tap-reporter": "1.9.0",
    "mol-conventional-changelog": "1.4.0",
    "rimraf": "2.6.2",
    "semantic-release": "15.9.16",
    "ts-jest": "23.1.4",
    "ts-node": "7.0.1",
    "typescript": "3.0.3"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-CXfNuf6TeF4ByYJ/cAxVcR2y58Q511soYd6JhXAJVPYp+9kIbkJZ+FZUw8fQCcNn5+XUNJ38CdjX0gpeUt5ITA==",
    "shasum": "4f10c96c3e377fc43494cc3e010bc24ab103af07",
    "tarball": "https://registry.npmjs.org/memfs/-/memfs-2.10.1.tgz",
    "fileCount": 20,
    "unpackedSize": 143728,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbrln8CRA9TVsSAnZWagAAIo4P/3b+bEWiE7gacWBUOD0A\nFYjoC1Z+f6V8Xape24naoodVB8EWemy9KL9DiNZ3RsI3przBwIUQgL8MArFE\nPK7aFLfu2oZpol1vTyW4SWiLZ7cgb0BjBfFQIkt4rGepwZVsvzPax3N5zYS/\n59LyNHggNpxrXGglrTL1rOMou9w5UFUhGZKTeYJISYI+QY1VduwUIUDItofI\nOLmA3oH4Z4vc+i/GcYVcb53Ff/kXdDnh8qP+xa4NurjAgi2/3+ByODQ5O8ax\nV4yIx5ixP7kbHX0eJJPvj0lvA/J+VNGM56gvlJBZWctJtpPcoEgvzOX0YgIP\nwUNlzHdIAIjztQYZlY/HgUS9OcSQW1SPvk05NxCvRRQ0rEYG8SlstuC/q3mi\neHbYkB4wBd3BRDCfMBgvWK2tG04NEi0AiSX+N4SKzQOnt/QEzQFGk/rS/vai\n4gupCMZJcypNCQNev3zxTflDmFMdZeLs1m/1mwfC5vR6nt9yWrbK98xBLDw0\nblxkJyh0gyIssZDCTR0r6RHyRGIdoGHM238TgMLqSpAn8ZJSdRwmNB4Qp3Cj\nD+DpVHNHVVxEnKT/mG4As56wCJ5rYdlQ+jUdnl060HHkKd2Aok9qxXfHS79L\n4Rns1HrolW8RALjd6kcF5WI3ikDFCTfkHWSgTVBaTpi1QoOp8PpCTKNXDz1z\nNfph\r\n=SX9h\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "files": [
    "lib"
  ],
  "gitHead": "41a7e353ac8265c2f6f970ea8ad007f51e684143",
  "homepage": "https://github.com/streamich/memfs#readme",
  "jest": {
    "moduleFileExtensions": [
      "ts",
      "tsx",
      "js",
      "jsx"
    ],
    "transform": {
      "^.+\\.tsx?$": "<rootDir>/node_modules/ts-jest/preprocessor.js"
    },
    "testRegex": ".*/__tests__/.*\\.(test|spec)\\.(jsx?|tsx?)$",
    "reporters": [
      "jest-tap-reporter"
    ]
  },
  "keywords": [
    "fs",
    "filesystem",
    "fs.js",
    "memory-fs",
    "memfs",
    "file",
    "file system",
    "mount",
    "memory",
    "in-memory",
    "virtual",
    "test",
    "testing",
    "mock"
  ],
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "streamich",
      "email": "streamich@dalecky.com"
    }
  ],
  "name": "memfs",
  "optionalDependencies": {},
  "readme": "# memfs 2.0\n\n[![][npm-badge]][npm-url] [![][travis-badge]][travis-url]\n\nIn-memory file-system with [Node's `fs` API](https://nodejs.org/api/fs.html).\n\n - 100% of Node's `fs` API implemented, see [*API Status*](./docs/api-status.md)\n - Stores files in memory, in `Buffer`s\n - Throws same* errors as Node.js\n - Has concept of *i-nodes*\n - Implements *hard links*\n - Implements *soft links* (aka symlinks, symbolic links)\n - More testing coming soon*\n - Permissions may* be implemented in the future\n - Can be used in browser, see [`memfs-webpack`](https://github.com/streamich/memfs-webpack)\n\n### Install\n\n```shell\nnpm install --save memfs\n```\n\n## Usage\n\n```js\nimport {fs} from 'memfs';\n\nfs.writeFileSync('/hello.txt', 'World!');\nfs.readFileSync('/hello.txt', 'utf8'); // World!\n```\n\nCreate a file system from a plain JSON:\n\n```js\nimport {fs, vol} from 'memfs';\n\nconst json = {\n    './README.md': '1',\n    './src/index.js': '2',\n    './node_modules/debug/index.js': '3',\n};\nvol.fromJSON(json, '/app');\n\nfs.readFileSync('/app/README.md', 'utf8'); // 1\nvol.readFileSync('/app/src/index.js', 'utf8'); // 2\n```\n\nExport to JSON:\n\n```js\nvol.writeFileSync('/script.sh', 'sudo rm -rf *');\nvol.toJSON(); // {\"/script.sh\": \"sudo rm -rf *\"}\n```\n\nUse it for testing:\n\n```js\nvol.writeFileSync('/foo', 'bar');\nexpect(vol.toJSON()).toEqual({\"/foo\": \"bar\"});\n```\n\nCreate as many filesystem volumes as you need:\n\n```js\nimport {Volume} from 'memfs';\n\nconst vol = Volume.fromJSON({'/foo': 'bar'});\nvol.readFileSync('/foo'); // bar\n\nconst vol2 = Volume.fromJSON({'/foo': 'bar 2'});\nvol2.readFileSync('/foo'); // bar 2\n```\n\nUse `memfs` together with [`unionfs`][unionfs] to create one filesystem\nfrom your in-memory volumes and the real disk filesystem:\n\n```js\nimport * as fs from 'fs';\nimport {ufs} from 'unionfs';\n\nufs\n    .use(fs)\n    .use(vol);\n\nufs.readFileSync('/foo'); // bar\n```\n\nUse [`fs-monkey`][fs-monkey] to monkey-patch Node's `require` function:\n\n```js\nimport {patchRequire} from 'fs-monkey';\n\nvol.writeFileSync('/index.js', 'console.log(\"hi world\")');\npatchRequire(vol);\nrequire('/index'); // hi world\n```\n\n## Docs\n\n  - [Reference](./docs/reference.md)\n  - [Relative paths](./docs/relative-paths.md)\n  - [API status](./docs/api-status.md)\n\n\n## See also\n\n - [`spyfs`][spyfs] - spies on filesystem actions\n - [`unionfs`][unionfs] - creates a union of multiple filesystem volumes\n - [`linkfs`][linkfs] - redirects filesystem paths\n - [`fs-monkey`][fs-monkey] - monkey-patches Node's `fs` module and `require` function\n - [`libfs`](https://github.com/streamich/full-js/blob/master/src/lib/fs.ts) - real filesystem (that executes UNIX system calls) implemented in JavaScript\n\n\n## Dependencies\n\nThis package depends on the following Node modules: `buffer`, `events`,\n`streams`, `path`.\n\nIt also uses `process` and `setImmediate` globals, but mocks them, if not\navailable.\n\n[npm-url]: https://www.npmjs.com/package/memfs\n[npm-badge]: https://img.shields.io/npm/v/memfs.svg\n[travis-url]: https://travis-ci.org/streamich/memfs\n[travis-badge]: https://travis-ci.org/streamich/memfs.svg?branch=master\n[memfs]: https://github.com/streamich/memfs\n[unionfs]: https://github.com/streamich/unionfs\n[linkfs]: https://github.com/streamich/linkfs\n[spyfs]: https://github.com/streamich/spyfs\n[fs-monkey]: https://github.com/streamich/fs-monkey\n\n\n\n## License\n\n[Unlicense](./LICENSE) - public domain.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/streamich/memfs.git"
  },
  "scripts": {
    "build": "tsc -p . && cpy src/internal lib/internal",
    "clean": "rimraf lib types",
    "semantic-release": "semantic-release",
    "test": "jest",
    "test:coverage": "jest --coverage",
    "test:watch": "jest --watch",
    "watch": "watch 'npm run build' ./src"
  },
  "types": "lib/index.d.ts",
  "version": "2.10.1"
}
