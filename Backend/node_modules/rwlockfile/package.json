{
  "_args": [
    [
      {
        "raw": "rwlockfile@^1.4.8",
        "scope": null,
        "escapedName": "rwlockfile",
        "name": "rwlockfile",
        "rawSpec": "^1.4.8",
        "spec": ">=1.4.8 <2.0.0",
        "type": "range"
      },
      "/Users/thoriqnurfaizal/Documents/GitHub/AdvancedReact/Backend/node_modules/prisma-generate-schema/node_modules/prisma-cli-engine"
    ]
  ],
  "_from": "rwlockfile@>=1.4.8 <2.0.0",
  "_id": "rwlockfile@1.4.12",
  "_inCache": true,
  "_location": "/rwlockfile",
  "_nodeVersion": "6.12.2",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/rwlockfile-1.4.12.tgz_1514332650289_0.2639586280565709"
  },
  "_npmUser": {
    "name": "dickeyxxx",
    "email": "dickeytk+npm@gmail.com"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "rwlockfile@^1.4.8",
    "scope": null,
    "escapedName": "rwlockfile",
    "name": "rwlockfile",
    "rawSpec": "^1.4.8",
    "spec": ">=1.4.8 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/prisma-cli-engine",
    "/prisma-generate-schema/prisma-cli-engine"
  ],
  "_resolved": "https://registry.npmjs.org/rwlockfile/-/rwlockfile-1.4.12.tgz",
  "_shasum": "40cef17c915207c4315c1f535a006e0d1556bcd8",
  "_shrinkwrap": null,
  "_spec": "rwlockfile@^1.4.8",
  "_where": "/Users/thoriqnurfaizal/Documents/GitHub/AdvancedReact/Backend/node_modules/prisma-generate-schema/node_modules/prisma-cli-engine",
  "author": {
    "name": "Jeff Dickey @dickeyxxx"
  },
  "bugs": {
    "url": "https://github.com/dickeyxxx/rwlockfile/issues"
  },
  "dependencies": {
    "fs-extra": "^5.0.0"
  },
  "description": "lockfile utility with reader/writers",
  "devDependencies": {
    "babel-cli": "^6.24.1",
    "babel-eslint": "^8.1.2",
    "babel-plugin-transform-async-to-generator": "^6.24.1",
    "babel-plugin-transform-flow-strip-types": "^6.22.0",
    "flow-bin": "^0.61.0",
    "flow-copy-source": "^1.2.0",
    "jest": "^22.0.4",
    "jsdoc-to-markdown": "3.0.3",
    "rimraf": "^2.6.2",
    "standard": "^10.0.3",
    "tmp": "^0.0.33"
  },
  "directories": {},
  "dist": {
    "shasum": "40cef17c915207c4315c1f535a006e0d1556bcd8",
    "tarball": "https://registry.npmjs.org/rwlockfile/-/rwlockfile-1.4.12.tgz"
  },
  "engines": {
    "node": ">=6.0.0"
  },
  "files": [
    "lib"
  ],
  "gitHead": "5c1448b32975686f185b07cc721024bfeb8be60b",
  "homepage": "https://github.com/dickeyxxx/rwlockfile",
  "keywords": [
    "lockfile",
    "locking"
  ],
  "license": "ISC",
  "main": "lib/rwlockfile.js",
  "maintainers": [
    {
      "name": "dickeyxxx",
      "email": "dickeytk+npm@gmail.com"
    },
    {
      "name": "rasphilco",
      "email": "philipe@heroku.com"
    },
    {
      "name": "ransombriggs",
      "email": "rbriggs@heroku.com"
    }
  ],
  "name": "rwlockfile",
  "optionalDependencies": {},
  "readme": "rwlockfile\n==========\n\n[![codecov](https://codecov.io/gh/dickeyxxx/rwlockfile/branch/master/graph/badge.svg)](https://codecov.io/gh/dickeyxxx/rwlockfile)\n[![Build Status](https://semaphoreci.com/api/v1/dickeyxxx/rwlockfile/branches/master/badge.svg)](https://semaphoreci.com/dickeyxxx/rwlockfile)\n[![Build status](https://ci.appveyor.com/api/projects/status/2s8cyotehrtap0t2/branch/master?svg=true)](https://ci.appveyor.com/project/Heroku/rwlockfile/branch/master)\n\nnode utility for read/write lockfiles\n\n<a name=\"module_rwlockfile\"></a>\n\n## rwlockfile\n\n* [rwlockfile](#module_rwlockfile)\n    * _static_\n        * [.write(path, options)](#module_rwlockfile.write) ⇒ <code>Promise</code>\n        * [.read(path, options)](#module_rwlockfile.read) ⇒ <code>Promise</code>\n    * _inner_\n        * [~hasWriter(path)](#module_rwlockfile..hasWriter)\n\n<a name=\"module_rwlockfile.write\"></a>\n\n### rwlockfile.write(path, options) ⇒ <code>Promise</code>\nlock for writing\n\n**Kind**: static method of <code>[rwlockfile](#module_rwlockfile)</code>  \n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| path | <code>string</code> |  | path of lockfile to use |\n| options | <code>object</code> |  |  |\n| [options.timeout] | <code>number</code> | <code>60000</code> | Max time to wait for lockfile to be open |\n| [options.skipOwnPid] | <code>boolean</code> |  | Do not wait on own pid (to upgrade current process) |\n\n<a name=\"module_rwlockfile.read\"></a>\n\n### rwlockfile.read(path, options) ⇒ <code>Promise</code>\nlock for reading\n\n**Kind**: static method of <code>[rwlockfile](#module_rwlockfile)</code>  \n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| path | <code>string</code> |  | path of lockfile to use |\n| options | <code>object</code> |  |  |\n| [options.timeout] | <code>number</code> | <code>60000</code> | Max time to wait for lockfile to be open |\n\n<a name=\"module_rwlockfile..hasWriter\"></a>\n\n### rwlockfile~hasWriter(path)\ncheck if active writer\n\n**Kind**: inner method of <code>[rwlockfile](#module_rwlockfile)</code>  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| path | <code>string</code> | path of lockfile to use |\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/dickeyxxx/rwlockfile.git"
  },
  "scripts": {
    "build": "babel src -d lib --ignore '*.test.js'",
    "clean": "rimraf lib",
    "copy-flow": "flow-copy-source -v -i '*.test.js' src lib",
    "prepare": "npm run clean && npm run build && npm run copy-flow",
    "test": "jest && flow && standard",
    "watch": "nodemon -e js -i lib --exec \"npm run prepare\""
  },
  "standard": {
    "parser": "babel-eslint",
    "env": "jest",
    "globals": [
      "$Shape"
    ],
    "ignore": [
      "flow-typed",
      "lib"
    ]
  },
  "version": "1.4.12"
}
