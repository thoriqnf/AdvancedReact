{
  "_args": [
    [
      {
        "raw": "graphql-config@^2.2.0",
        "scope": null,
        "escapedName": "graphql-config",
        "name": "graphql-config",
        "rawSpec": "^2.2.0",
        "spec": ">=2.2.0 <3.0.0",
        "type": "range"
      },
      "/Users/thoriqnurfaizal/Documents/GitHub/AdvancedReact/Backend/node_modules/prisma-cli-core"
    ]
  ],
  "_from": "graphql-config@^2.2.0",
  "_hasShrinkwrap": false,
  "_id": "graphql-config@2.2.1",
  "_location": "/prisma-cli-core/graphql-config",
  "_nodeVersion": "10.10.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/graphql-config_2.2.1_1537198951531_0.4427277182222735"
  },
  "_npmUser": {
    "name": "timsuchanek",
    "email": "tim.suchanek@gmail.com"
  },
  "_npmVersion": "6.4.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "graphql-config@^2.2.0",
    "scope": null,
    "escapedName": "graphql-config",
    "name": "graphql-config",
    "rawSpec": "^2.2.0",
    "spec": ">=2.2.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/prisma-cli-core",
    "/prisma-cli-core/graphql-config-extension-prisma"
  ],
  "_resolved": "https://registry.npmjs.org/graphql-config/-/graphql-config-2.2.1.tgz",
  "_shasum": "5fd0ec77ac7428ca5fb2026cf131be10151a0cb2",
  "_shrinkwrap": null,
  "_spec": "graphql-config@^2.2.0",
  "_where": "/Users/thoriqnurfaizal/Documents/GitHub/AdvancedReact/Backend/node_modules/prisma-cli-core",
  "author": {
    "name": "Johannes Schickling",
    "email": "johannes@graph.cool"
  },
  "bugs": {
    "url": "https://github.com/graphcool/graphql-config/issues"
  },
  "dependencies": {
    "graphql-import": "^0.7.1",
    "graphql-request": "^1.5.0",
    "js-yaml": "^3.10.0",
    "lodash": "^4.17.4",
    "minimatch": "^3.0.4"
  },
  "description": "The easiest way to configure your development environment with your GraphQL schema (supported by most tools, editors & IDEs)",
  "devDependencies": {
    "@types/graphql": "0.13.3",
    "@types/node": "9.4.6",
    "@types/node-fetch": "1.6.7",
    "ava": "0.25.0",
    "cpx": "1.5.0",
    "graphql": "14.0.2",
    "rimraf": "2.6.2",
    "tslint": "5.9.1",
    "tslint-config-standard": "7.0.0",
    "typescript": "2.7.2"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-U8+1IAhw9m6WkZRRcyj8ZarK96R6lQBQ0an4lp76Ps9FyhOXENC5YQOxOFGm5CxPrX2rD0g3Je4zG5xdNJjwzQ==",
    "shasum": "5fd0ec77ac7428ca5fb2026cf131be10151a0cb2",
    "tarball": "https://registry.npmjs.org/graphql-config/-/graphql-config-2.2.1.tgz",
    "fileCount": 43,
    "unpackedSize": 76662,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbn8toCRA9TVsSAnZWagAA0wAP/2nLbyTfOpGiYgO3RvBJ\nVTFJivxVkFKConfD754PfiK1uTZA9dgZXAWzzixYUWShCTmuCkyJ1NmAjVdE\nj5Zjcq2TWrcRssF5NKcXcPrI65hh1GVB9ziTt6KLD30NH+H2P7SZ/3dq+ylc\naDGhwcoALXoileSItoIjkg7IOtj2aCMq94Hp2AmFunPnCdLwbLMV7pUDrNnC\n4YKj0NhBUWKykE6aor5To2CHf8j11bZHxBmtD8NUkPakqz87unUzLp9CaP9f\nun+lRCRN+e9mXywV/m8Pgi750w7pM45pBLHPVXdnXzl/Ew5Gio0bJQxFRWc+\nlhcqnLzCAJfT7Wtjb2fD/ThCTltOi3qpyEm7+y0ZsMgfAm94+GWUEuE5JGE3\n8fetebsl8SclP/eqgMRLLeHdPCi7BezEOvx+lyZGe54EgbmglPoYuZVefZOD\n+/xmWISQjqFHhIZ3L66DbBzCcGDqXKYvvTjg9GGhoC25O1JZ/ccpdJ3ZQ3XT\nwefUYnCzkQ8OVLSf2YtHSBNsHZxQn8qynO7RyTVzKyiy10OZnU5/1XXDJHbG\nb09VUDZC18hQOM6aSYh44m2BPqUrnnYcuUr2Pk7VymeCmJln8ayK5e64ueyI\npsxY3KsOcZZYVRU6P+fzeh5avE0xYsgcyhHJ2/NcgAcg86f4pDlzK3SN9djE\nWJQp\r\n=gVsB\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">= 6.0.0"
  },
  "files": [
    "LICENSE",
    "README.md",
    "lib/"
  ],
  "gitHead": "76bd1dbdd823a1b36c609d8a21ebc4c6247ef9db",
  "homepage": "https://github.com/graphcool/graphql-config#readme",
  "keywords": [
    "graphql",
    "config",
    "relay",
    "apollo"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "asiandrummer",
      "email": "asiandrummer@gmail.com"
    },
    {
      "name": "i1g",
      "email": "ivan.goncharov.ua@gmail.com"
    },
    {
      "name": "romanhotsiy",
      "email": "gotsijroman@gmail.com"
    },
    {
      "name": "schickling",
      "email": "schickling.j@gmail.com"
    }
  ],
  "name": "graphql-config",
  "optionalDependencies": {},
  "peerDependencies": {
    "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
  },
  "readme": "# graphql-config\n\n[![Build Status](https://travis-ci.org/prisma/graphql-config.svg?branch=master)](https://travis-ci.org/prisma/graphql-config) [![npm version](https://badge.fury.io/js/graphql-config.svg)](https://badge.fury.io/js/graphql-config)\n\n> The README reflects the new [graphql-config protocol](specification.md).\n> Old graphql-config-parser documentation [can be found here](https://github.com/graphcool/graphql-config/tree/graphql-config-parser)\n\nThe easiest way to configure your development environment with your GraphQL schema (supported by most tools, editors &amp; IDEs)\n\n## Supported by...\n\n### Language Services\n* [graphql-language-service](https://github.com/graphql/graphql-language-service) - An interface for building GraphQL language services for IDEs (_pending_)\n\n### Editors\n* [js-graphql-intellij-plugin](https://github.com/jimkyndemeyer/js-graphql-intellij-plugin) - GraphQL language support for IntelliJ IDEA and WebStorm, including Relay.QL tagged templates in JavaScript and TypeScript (_pending_)\n* [atom-language-graphql](https://github.com/rmosolgo/language-graphql) - GraphQL support for Atom text editor (_pending_)\n* [vscode-graphql](https://github.com/stephen/vscode-graphql) - GraphQL support for VSCode text editor\n\n### Tools\n\n* [babel-plugin-react-relay](https://github.com/graphcool/babel-plugin-react-relay) - Babel compile step to process your `Relay.QL` queries (_pending_)\n* [babel-plugin-transform-relay-hot](https://github.com/nodkz/babel-plugin-transform-relay-hot) - Wrapper under BabelRelayPlugin with hot reload (_pending_)\n* [eslint-plugin-graphql](https://github.com/apollostack/eslint-plugin-graphql) - An ESLint plugin that checks tagged template strings against a GraphQL schema (_pending_)\n* [webpack-plugin-graphql-schema-hot](https://github.com/nodkz/webpack-plugin-graphql-schema-hot) - Webpack plugin which tracks changes in your schema and generates its introspection in `json` and `txt` formats (_pending_)\n\n> Did we forget a tool/editor? Please [add it here](https://github.com/graphcool/graphql-config/issues/new).\n\n**[Go to `graphql-config` library docs](#graphql-config-api)**\n\n## Usage\n\n**tl;dr**\n\nInstall [`graphql-cli`](https://github.com/graphcool/graphql-cli) and run `graphql init`. Answer a few simple questions and you are set up!\n\nYou can either configure your GraphQL endpoint via a configuration file `.graphqlconfig`\n(or `.graphqlconfig.yaml`) which should be put into the root of your project\n\n### Simplest use case\n\nThe simplest config specifies only `schemaPath` which is path to the file with introspection\nresults or corresponding SDL document\n\n```json\n{\n  \"schemaPath\": \"schema.graphql\"\n}\n```\n\nor\n\n```json\n{\n  \"schemaPath\": \"schema.json\"\n}\n```\n\n### Specifying includes/excludes files\n\nYou can specify which files are included/excluded using the corresponding options:\n\n```json\n{\n  \"schemaPath\": \"schema.graphql\",\n  \"includes\": [\"*.graphql\"],\n  \"excludes\": [\"temp/**\"]\n}\n```\n\n> Note: `excludes` and `includes` fields are globs that should match filename.\n> So, just `temp` or `temp/` won't match all files inside the directory.\n> That's why the example uses `temp/**`\n\n#### Specifying endpoint info\n\nYou may specify your endpoints info in `.graphqlconfig` which may be used by some tools.\nThe simplest case:\n\n```json\n{\n  \"schemaPath\": \"schema.graphql\",\n  \"extensions\": {\n    \"endpoints\": {\n      \"dev\": \"https://example.com/graphql\"\n    }\n  }\n}\n```\n\nIn case you need provide additional information, for example headers to authenticate your GraphQL endpoint or\nan endpoint for subscription, you can use expanded version:\n\n```json\n{\n  \"schemaPath\": \"schema.graphql\",\n  \"extensions\": {\n    \"endpoints\": {\n      \"dev\": {\n        \"url\": \"https://example.com/graphql\",\n        \"headers\": {\n          \"Authorization\": \"Bearer ${env:AUTH_TOKEN_ENV}\"\n        },\n        \"subscription\": {\n          \"url\": \"ws://example.com/graphql\",\n          \"connectionParams\": {\n            \"Token\": \"${env:YOUR_APP_TOKEN}\"\n          }\n        }\n      }\n    }\n  }\n}\n```\n\n> Note: do not save secure information in .graphqlconfig file. Use [Environment variables](specification.md#referencing-environment-variables) for that like in the example above.\n\nIn case if you have multiple endpoints use the following syntax:\n\n```json\n{\n  \"schemaPath\": \"schema.graphql\",\n  \"extensions\": {\n    \"endpoints\": {\n      \"prod\": {\n        \"url\": \"https://your-app.com/graphql\",\n        \"subscription\": {\n          \"url\": \"wss://subscriptions.graph.cool/v1/instagram\"\n        }\n      },\n      \"dev\": {\n        \"url\": \"http://localhost:3000/graphql\",\n        \"subscription\": {\n          \"url\": \"ws://localhost:3001\"\n        }\n      }\n    }\n  }\n}\n```\n\n### Multi-project configuration (advanced)\n> TBD\n\n__Refer to [specification use-cases](specification.md#use-cases) for details__\n\n## How it works\n\nThis project aims to be provide a unifying configuration file format to configure your GraphQL schema in your development environment.\n\nAdditional to the format specification, it provides the [`graphql-config`](#graphql-config-api) library, which is used by [all supported tools and editor plugins](#supported-by). The library reads your provided configuration and passes the actual GraphQL schema along to the tool which called it.\n\n\n## `graphql-config` API\n\nHere are very basic examples of how to use `graphql-config` library.\n\nYou can find **[the detailed documentation here](docs/)**\n\n### getGraphQLProjectConfig\n\n**NOTE:** if your tool works on per-file basis (e.g. editor plugin, linter, etc) use\n[`getGraphQLConfig`](#getGraphQLConfig) function\n\n`getGraphQLProjectConfig` should be used by tools that do not work on per-file basis\n\n```js\nimport { getGraphQLProjectConfig } from 'graphql-config'\n\nconst config = getGraphQLProjectConfig('./optionalProjectDir', 'optionalProjectName')\nconst schema = config.getSchema()\n// use schema for your tool/plugin\n```\n\n### getGraphQLConfig\n\n`getGraphQLConfig` should be used by tools that work on per-file basis (editor plugins,\nlinters, etc.)\n\n```js\nimport { getGraphQLConfig } from 'graphql-config'\n\nconst config = getGraphQLConfig('./optionalProjectDir')\nconst schema = config.getConfigForFile(filename).getSchema()\n// use schema for your tool/plugin\n```\n\n## Help & Community [![Slack Status](https://slack.graph.cool/badge.svg)](https://slack.graph.cool)\n\nJoin our [Slack community](http://slack.graph.cool/) if you run into issues or have questions. We love talking to you!\n\n![](http://i.imgur.com/5RHR6Ku.png)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/graphcool/graphql-config.git"
  },
  "scripts": {
    "build": "npm run clean && tsc",
    "clean": "rimraf lib",
    "copy-test-assets": "cpx \"src/**/{.graphqlconfig*,*.graphql,*.json}\" lib",
    "prepublish": "npm run build",
    "test": "tslint src/**/*.ts && npm run test-only",
    "test-only": "npm run build && npm run copy-test-assets && ava --verbose lib/__tests__/**/*.js --serial"
  },
  "types": "lib/index.d.ts",
  "version": "2.2.1"
}
