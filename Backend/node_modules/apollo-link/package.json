{
  "_args": [
    [
      {
        "raw": "apollo-link@^1.2.2",
        "scope": null,
        "escapedName": "apollo-link",
        "name": "apollo-link",
        "rawSpec": "^1.2.2",
        "spec": ">=1.2.2 <2.0.0",
        "type": "range"
      },
      "/Users/thoriqnurfaizal/Documents/GitHub/AdvancedReact/Backend/node_modules/graphql-tools"
    ]
  ],
  "_from": "apollo-link@^1.2.2",
  "_hasShrinkwrap": false,
  "_id": "apollo-link@1.2.3",
  "_location": "/apollo-link",
  "_nodeVersion": "8.11.2",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/apollo-link_1.2.3_1537004055546_0.5525684266757951"
  },
  "_npmUser": {
    "name": "mdg",
    "email": "npm@meteor.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "apollo-link@^1.2.2",
    "scope": null,
    "escapedName": "apollo-link",
    "name": "apollo-link",
    "rawSpec": "^1.2.2",
    "spec": ">=1.2.2 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/apollo-link-error",
    "/apollo-link-ws",
    "/graphql-binding/graphql-tools",
    "/graphql-tools",
    "/http-link-dataloader"
  ],
  "_resolved": "https://registry.npmjs.org/apollo-link/-/apollo-link-1.2.3.tgz",
  "_shasum": "9bd8d5fe1d88d31dc91dae9ecc22474d451fb70d",
  "_shrinkwrap": null,
  "_spec": "apollo-link@^1.2.2",
  "_where": "/Users/thoriqnurfaizal/Documents/GitHub/AdvancedReact/Backend/node_modules/graphql-tools",
  "author": {
    "name": "Evans Hauser",
    "email": "evanshauser@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/apollographql/apollo-link/issues"
  },
  "contributors": [
    {
      "name": "James Baxley",
      "email": "james@meteor.com"
    },
    {
      "name": "Jonas Helfer",
      "email": "jonas@helfer.email"
    },
    {
      "name": "jon wong",
      "email": "j@jnwng.com"
    },
    {
      "name": "Sashko Stubailo",
      "email": "sashko@stubailo.com"
    }
  ],
  "dependencies": {
    "apollo-utilities": "^1.0.0",
    "zen-observable-ts": "^0.8.10"
  },
  "description": "Flexible, lightweight transport layer for GraphQL",
  "devDependencies": {
    "@types/graphql": "14.0.0",
    "@types/jest": "22.2.3",
    "@types/node": "9.6.31",
    "browserify": "16.2.2",
    "graphql": "14.0.2",
    "graphql-tag": "2.9.2",
    "jest": "22.4.4",
    "rimraf": "2.6.1",
    "rollup": "0.65.2",
    "ts-jest": "22.4.6",
    "tslint": "5.11.0",
    "typescript": "3.0.3",
    "uglify-js": "3.4.9"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-iL9yS2OfxYhigme5bpTbmRyC+Htt6tyo2fRMHT3K1XRL/C5IQDDz37OjpPy4ndx7WInSvfSZaaOTKFja9VWqSw==",
    "shasum": "9bd8d5fe1d88d31dc91dae9ecc22474d451fb70d",
    "tarball": "https://registry.npmjs.org/apollo-link/-/apollo-link-1.2.3.tgz",
    "fileCount": 41,
    "unpackedSize": 94155,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbnNIYCRA9TVsSAnZWagAAqTcP/jO6ZrqJGNlRCE4qH+0N\nVCVE4OKqhIlgfeFtoygzBo408U39GFtzk7G+jFt6mgcRG9hNqABTBQzPwcJW\nAySpd7SvcpM27ntyJi+orsOD3ynJn/2Zvd87S1rVI/imua6eMFV3WY1qL7JR\nl5GuFeAkXPO6H2ZMVZKEUcJENPX61t0kuesDTpsTzhkELm+zz5jSVomwYHOO\nQ4Es7iT6BnjefutUBmEY5NSgTs8KIWFDOdz56RWwZ5ROOP0+bzfmFqyTx7Mn\nUHIvx52WFle/z+k7gUHHZjWLOWIjSeJlCuERCTdy6cXVz/7QdVvVn32UEinv\nPWdsQXBMb76+XYONqJfEd4Rv1/LHxsUeDBp3rQ8QfNB6WJCQyX9ad8Hi1Ux/\ngFNthLlFQK7T8f10eVe/e3NxolBtFFU+KlhrpPIhQNV3GyDVvY7VoMrrlZ9w\nlA+5ahUakqcsfErAlN38yZwqn4XYK+UD8kL3DJ2Ds8ipp7aNx2uz9rO86jC1\nBTsjlIBk8E4oh/qfdIexEdoF/dIqZD28xgHaup8MYFkkyWYHGcvwpC6Mao1h\nIuReGintKTBlY96QtfzufTD+XMSICFMALM3wqwHIt0SCcTxjUZ3zLNodal8N\nEdBuwsfeXgfzSDTCD/Wt0IA5YEieU5BAInuE0NgR1m5bwPyhFWO+zDbmJ8V2\nd75B\r\n=+MUf\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "homepage": "https://github.com/apollographql/apollo-link#readme",
  "jest": {
    "transform": {
      ".(ts|tsx)": "ts-jest"
    },
    "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
    "moduleFileExtensions": [
      "ts",
      "tsx",
      "js",
      "json"
    ],
    "mapCoverage": true,
    "testURL": "http://localhost"
  },
  "jsnext:main": "./lib/index.js",
  "license": "MIT",
  "main": "./lib/bundle.umd.js",
  "maintainers": [
    {
      "name": "evanshauser",
      "email": "evanshauser@gmail.com"
    },
    {
      "name": "jbaxleyiii",
      "email": "james@meteor.com"
    },
    {
      "name": "mdg",
      "email": "npm@meteor.com"
    },
    {
      "name": "peggyrayzis",
      "email": "peggyrayzis@gmail.com"
    }
  ],
  "module": "./lib/index.js",
  "name": "apollo-link",
  "optionalDependencies": {},
  "peerDependencies": {
    "graphql": "^0.11.3 || ^0.12.3 || ^0.13.0 || ^14.0.0"
  },
  "readme": "# apollo-link\r\n\r\n## Purpose\r\n\r\n`apollo-link` is a standard interface for modifying control flow of GraphQL requests and fetching GraphQL results, designed to provide a simple GraphQL client that is capable of extensions.\r\nThe targeted use cases of `apollo-link` are highlighted below:\r\n\r\n* fetch queries directly without normalized cache\r\n* network interface for Apollo Client\r\n* network interface for Relay Modern\r\n* fetcher for\r\n\r\nApollo Link is the interface for creating new links in your application.\r\n\r\nThe client sends a request as a method call to a link and can recieve one or more (in the case of subscriptions) responses from the server. The responses are returned using the Observer pattern.\r\n\r\n![Apollo Link Chain](https://cdn-images-1.medium.com/max/1600/1*62VLGUaU-9ULCoBCGvgdkQ.png)\r\n\r\nResults from the server can be provided by calling `next(result)` on the observer. In the case of a network/transport error (not a GraphQL Error) the `error(err)` method can be used to indicate a response will not be recieved. If multiple responses are not supported by the link, `complete()` should be called to inform the client no further data will be provided.\r\n\r\nIn the case of an intermediate link, a second argument to `request(operation, forward)` is the link to `forward(operation)` to. `forward` returns an observable and it can be returned directly or subscribed to.\r\n\r\n```js\r\nforward(operation).subscribe({\r\n  next: result => {\r\n    handleTheResult(result)\r\n  },\r\n  error: error => {\r\n    handleTheNetworkError(error)\r\n  },\r\n});\r\n```\r\n\r\n## Implementing a basic custom transport\r\n\r\n```js\r\nclass import { ApolloLink, Observable } from 'apollo-link';\r\n\r\nexport class CustomApolloLink extends ApolloLink {\r\n  request(operation /*, forward*/) {\r\n    //Whether no one is listening anymore\r\n    let unsubscribed = false;\r\n\r\n    return new Observable(observer => {\r\n      somehowGetOperationToServer(operation, (error, result) => {\r\n        if (unsubscribed) return;\r\n        if (error) {\r\n          //Network error\r\n          observer.error(error);\r\n        } else {\r\n          observer.next(result);\r\n          observer.complete(); //If subscriptions not supported\r\n        }\r\n      });\r\n\r\n      function unsubscribe() {\r\n        unsubscribed = true;\r\n      }\r\n\r\n      return unsubscribe;\r\n    });\r\n  }\r\n}\r\n```\r\n\r\n## Installation\r\n\r\n`npm install apollo-link --save`\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/apollographql/apollo-link.git"
  },
  "scripts": {
    "build": "tsc -p .",
    "build:browser": "browserify ./lib/bundle.umd.js -o=./lib/bundle.js --i apollo-utilities --i graphql --i zen-observable-ts && npm run minify:browser",
    "bundle": "rollup -c",
    "clean": "rimraf lib/* && rimraf coverage/*",
    "coverage": "jest --coverage",
    "filesize": "npm run build && npm run build:browser",
    "lint": "tslint --type-check -p tsconfig.json -c ../../tslint.json src/*.ts",
    "minify:browser": "uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.js",
    "postbuild": "npm run bundle",
    "prebuild": "npm run clean",
    "prepublishOnly": "npm run clean && npm run build",
    "test": "jest",
    "watch": "tsc -w -p . & rollup -c -w"
  },
  "typings": "./lib/index.d.ts",
  "version": "1.2.3"
}
