{
  "_args": [
    [
      {
        "raw": "marked-terminal@^2.0.0",
        "scope": null,
        "escapedName": "marked-terminal",
        "name": "marked-terminal",
        "rawSpec": "^2.0.0",
        "spec": ">=2.0.0 <3.0.0",
        "type": "range"
      },
      "/Users/thoriqnurfaizal/Documents/GitHub/AdvancedReact/Backend/node_modules/prisma-generate-schema/node_modules/prisma-cli-engine"
    ]
  ],
  "_from": "marked-terminal@>=2.0.0 <3.0.0",
  "_id": "marked-terminal@2.0.0",
  "_inCache": true,
  "_location": "/marked-terminal",
  "_nodeVersion": "6.3.1",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/marked-terminal-2.0.0.tgz_1479111428629_0.6575095951557159"
  },
  "_npmUser": {
    "name": "mikaelb",
    "email": "mikaelbre@gmail.com"
  },
  "_npmVersion": "3.10.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "marked-terminal@^2.0.0",
    "scope": null,
    "escapedName": "marked-terminal",
    "name": "marked-terminal",
    "rawSpec": "^2.0.0",
    "spec": ">=2.0.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/prisma-cli-engine",
    "/prisma-generate-schema/prisma-cli-engine"
  ],
  "_resolved": "https://registry.npmjs.org/marked-terminal/-/marked-terminal-2.0.0.tgz",
  "_shasum": "5eaf568be66f686541afa52a558280310a31de2d",
  "_shrinkwrap": null,
  "_spec": "marked-terminal@^2.0.0",
  "_where": "/Users/thoriqnurfaizal/Documents/GitHub/AdvancedReact/Backend/node_modules/prisma-generate-schema/node_modules/prisma-cli-engine",
  "author": {
    "name": "Mikael Brevik"
  },
  "bugs": {
    "url": "https://github.com/mikaelbr/marked-terminal/issues"
  },
  "dependencies": {
    "cardinal": "^1.0.0",
    "chalk": "^1.1.3",
    "cli-table": "^0.3.1",
    "lodash.assign": "^4.2.0",
    "node-emoji": "^1.4.1"
  },
  "description": "A custom render for marked to output to the Terminal",
  "devDependencies": {
    "marked": "^0.3.6",
    "mocha": "^3.1.2"
  },
  "directories": {
    "example": "example"
  },
  "dist": {
    "shasum": "5eaf568be66f686541afa52a558280310a31de2d",
    "tarball": "https://registry.npmjs.org/marked-terminal/-/marked-terminal-2.0.0.tgz"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "12aa1c6b1a2420321c37772addb62f8e2597c77d",
  "homepage": "https://github.com/mikaelbr/marked-terminal",
  "keywords": [
    "marked",
    "render",
    "terminal",
    "markdown",
    "markdown-to-terminal"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "mikaelb",
      "email": "mikaelbre@gmail.com"
    }
  ],
  "name": "marked-terminal",
  "optionalDependencies": {},
  "peerDependencies": {
    "marked": "^0.3.6"
  },
  "readme": "marked-terminal\n===\n\n> Custom Renderer for [marked](https://github.com/chjj/marked)\nallowing for printing Markdown to the Terminal. Supports pretty tables, syntax\nhighlighting for javascript, and overriding all colors and styles.\n\nCould for instance be used to print usage information.\n\n## Install\n\n```sh\nnpm install marked marked-terminal\n```\n\n## Example\n\n```javascript\nvar marked = require('marked');\nvar TerminalRenderer = require('marked-terminal');\n\nmarked.setOptions({\n  // Define custom renderer\n  renderer: new TerminalRenderer()\n});\n\n// Show the parsed data\nconsole.log(marked('# Hello \\n This is **markdown** printed in the `terminal`'));\n```\n\nThis will produce the following:\n\n![Screenshot of marked-terminal](./screenshot.png)\n\n\n### Syntax Highlighting\n\nAlso have support for syntax highlighting using [cardinal](https://github.com/thlorenz/cardinal).\nYou can override highlight defaults by passing in settings as the second argument for TerminalRenderer,\nor you can create a `.cardinalrc` as defined in the [cardinal README](https://github.com/thlorenz/cardinal).\n\nHaving the following markdown input:\n\n<pre>\n```js\nvar foo = function(bar) {\n  console.log(bar);\n};\nfoo('Hello');\n```\n</pre>\n\n...we will convert it into terminal format:\n\n```javascript\n// Show the parsed data\nconsole.log(marked(exampleSource));\n```\n\nThis will produce the following:\n\n![Screenshot of marked-terminal](./screenshot2.png)\n\n## API\n\nConstructur: `new TerminalRenderer([options][, highlightOptions])`\n\n### `options`\nOptional\nUsed to override default styling.\n\nDefault values are:\n\n```javascript\nvar defaultOptions = {\n  // Colors\n  code: chalk.yellow,\n  blockquote: chalk.gray.italic,\n  html: chalk.gray,\n  heading: chalk.green.bold,\n  firstHeading: chalk.magenta.underline.bold,\n  hr: chalk.reset,\n  listitem: chalk.reset,\n  table: chalk.reset,\n  paragraph: chalk.reset,\n  strong: chalk.bold,\n  em: chalk.italic,\n  codespan: chalk.yellow,\n  del: chalk.dim.gray.strikethrough,\n  link: chalk.blue,\n  href: chalk.blue.underline,\n\n  // Formats the bulletpoints and numbers for lists\n  list: function (body, ordered) {/* ... */},\n\n  // Reflow and print-out width\n  width: 80, // only applicable when reflow is true\n  reflowText: false,\n\n  // Should it prefix headers?\n  showSectionPrefix: true,\n\n  // Whether or not to undo marked escaping\n  // of enitities (\" -> &quot; etc)\n  unescape: true,\n\n  // Whether or not to show emojis\n  emoji: true,\n\n  // Options passed to cli-table\n  tableOptions: {},\n\n  // The size of tabs in number of spaces or as tab characters\n  tab: 3 // examples: 4, 2, \\t, \\t\\t\n};\n```\n\n#### Example of overriding defaults\n```javascript\nmarked.setOptions({\n  renderer: new TerminalRenderer({\n    codespan: chalk.underline.magenta,\n  })\n});\n```\n\n### `highlightOptions`\nOptions passed into [cardinal](https://github.com/thlorenz/cardinal). See\nreadme there to see what options to pass.\n\n\nSee [more examples](./example/)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mikaelbr/marked-terminal.git"
  },
  "scripts": {
    "test": "mocha tests/*.js --reporter spec"
  },
  "version": "2.0.0"
}
