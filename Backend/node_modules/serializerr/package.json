{
  "_args": [
    [
      {
        "raw": "serializerr@^1.0.3",
        "scope": null,
        "escapedName": "serializerr",
        "name": "serializerr",
        "rawSpec": "^1.0.3",
        "spec": ">=1.0.3 <2.0.0",
        "type": "range"
      },
      "/Users/thoriqnurfaizal/Documents/GitHub/AdvancedReact/Backend/node_modules/npm-run"
    ]
  ],
  "_from": "serializerr@>=1.0.3 <2.0.0",
  "_id": "serializerr@1.0.3",
  "_inCache": true,
  "_location": "/serializerr",
  "_nodeVersion": "6.3.1",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/serializerr-1.0.3.tgz_1470762023362_0.9636031531263143"
  },
  "_npmUser": {
    "name": "timoxley",
    "email": "secoif@gmail.com"
  },
  "_npmVersion": "3.10.5",
  "_phantomChildren": {},
  "_requested": {
    "raw": "serializerr@^1.0.3",
    "scope": null,
    "escapedName": "serializerr",
    "name": "serializerr",
    "rawSpec": "^1.0.3",
    "spec": ">=1.0.3 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/npm-run"
  ],
  "_resolved": "https://registry.npmjs.org/serializerr/-/serializerr-1.0.3.tgz",
  "_shasum": "12d4c5aa1c3ffb8f6d1dc5f395aa9455569c3f91",
  "_shrinkwrap": null,
  "_spec": "serializerr@^1.0.3",
  "_where": "/Users/thoriqnurfaizal/Documents/GitHub/AdvancedReact/Backend/node_modules/npm-run",
  "author": {
    "name": "Tim Oxley",
    "email": "secoif@gmail.com"
  },
  "babel": {
    "presets": [
      "es2015"
    ]
  },
  "bugs": {
    "url": "https://github.com/timoxley/serializerr/issues"
  },
  "dependencies": {
    "protochain": "^1.0.5"
  },
  "description": "Convert Errors & Objects into an easily-serialized vanilla Object.",
  "devDependencies": {
    "babel-cli": "^6.11.4",
    "babel-preset-es2015": "^6.13.2",
    "standard": "^7.1.2",
    "tape": "^4.6.0"
  },
  "directories": {},
  "dist": {
    "shasum": "12d4c5aa1c3ffb8f6d1dc5f395aa9455569c3f91",
    "tarball": "https://registry.npmjs.org/serializerr/-/serializerr-1.0.3.tgz"
  },
  "gitHead": "fd121c29fb0c4c60f88f8b723e4928f339d842d1",
  "homepage": "https://github.com/timoxley/serializerr",
  "keywords": [
    "object",
    "error",
    "utility",
    "JSON",
    "serialise",
    "errors",
    "non-enumerable",
    "enumberable",
    "stringify",
    "properties"
  ],
  "license": "ISC",
  "main": "serializerr.js",
  "maintainers": [
    {
      "name": "timoxley",
      "email": "secoif@gmail.com"
    }
  ],
  "name": "serializerr",
  "optionalDependencies": {},
  "readme": "# serializerr\n\nConvert Errors & Objects into an easily-serialized vanilla Object.\n\n[![Build Status](https://travis-ci.org/timoxley/serializerr.png?branch=master)](https://travis-ci.org/timoxley/serializerr)\n\n`serializerr` creates a vanilla `Object` with a flattened prototype\nchain & any non-enumerable properties mapped to enumerable properties.\n\nThis allows `Error` objects to be serialised to JSON without losing\nimportant data.\n\n## Installation\n\n```\nnpm install serializerr\n```\n\n## Usage\n\n```js\n\nvar wellSerializedError = JSON.parse(JSON.stringify(\n  serializerr(error)\n))\n\nconsole.log(wellSerializedError.name) // Error\nconsole.log(wellSerializedError.message) // an error occurred\nconsole.log(wellSerializedError.stack) // Error: an error occurred\\n  at Test.<anonymous> ...\n\n```\n\n## Example\n\n```js\n\nvar serializerr = require('serializerr')\n\nvar error = new Error('an error')\n\n// simulate transferring an Error object over the wire as JSON\n// without first passing through serializerr\nvar poorlySerializedError = JSON.parse(JSON.stringify(error))\n\n// oh dear:\nconsole.log(poorlySerializedError.name) // undefined\nconsole.log(poorlySerializedError.message) // undefined\nconsole.log(poorlySerializedError.stack) // undefined\n\n// bring forth the serializerr\nvar errorObject = serializerr(error)\n\nvar wellSerializedError = JSON.parse(JSON.stringify(errorObject))\n\n// properties are conserved!\nconsole.log(wellSerializedError.name) // Error\nconsole.log(wellSerializedError.message) // an error occurred\nconsole.log(wellSerializedError.stack) // Error: an error occurred\\n  at Test.<anonymous> ...\n\n// note errorObject is a vanilla Object, not an Error\nerrorObject instanceof Error // false\n```\n\n## Why\n\nIf you've ever tried to send an Error over a JSON-encoded connection\nyou've probably been surprised to find all the useful information is\nsapped out of it; all the juicy properties like `name`, `message` &\n`stack` are non-enumerable thus they are not included in the\nstringified JSON. This may be non-standard behaviour, as I could not\nlocate any mention in either the ES5.1 or the ES6 spec about it, but\nError properties are non-enumerable both in V8 (Chrome/io.js/Node.js) &\nSpiderMonkey (Firefox).\n\nI believe Error property non-enumerability was added as a security\nmeasure to prevent stack traces and other sensitive information\naccidentally leaking, but it's not uncommon to actually want to send\nthe data in Error objects over the wire.\n\n`serializerr` makes an Object suitable for serializing to & from\nJSON. Not restricted to use with Errors, will work with any Object.\n\n## Notes on 'ize' vs 'ise'\n\nName was selected as programming world is mostly Americanised, and npm\nsearch does not seem to do effective stemming.\n\nThis decision came with strong feelings of guilt and shame about what I thought\nwas blasphemous Americanised spelling, but it turns out this is a\nmisconception thus I am pardoned:\n\n> The -ize spelling is often incorrectly seen as an Americanism in\n> Britain. However, the Oxford English Dictionary (OED) recommends -ize\n> and notes that the -ise spelling is from French.\n\nFrom [Wikipedia: American and British English spelling differences](http://en.wikipedia.org/wiki/American_and_British_English_spelling_differences#-ise.2C_-ize_.28-isation.2C_-ization.29)\n\n## License\n\nISC\n",
  "readmeFilename": "Readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/timoxley/serializerr.git"
  },
  "scripts": {
    "posttest": "rm serializerr-test.js",
    "prepublish": "babel index.js > serializerr.js",
    "pretest": "npm run prepublish",
    "test": "(babel test.js > serializerr-test.js) && tape serializerr-test.js && standard"
  },
  "standard": {
    "ignore": [
      "serializerr.js",
      "serializerr-test.js"
    ]
  },
  "version": "1.0.3"
}
