{
  "_args": [
    [
      {
        "raw": "npm-run@4.1.2",
        "scope": null,
        "escapedName": "npm-run",
        "name": "npm-run",
        "rawSpec": "4.1.2",
        "spec": "4.1.2",
        "type": "version"
      },
      "/Users/thoriqnurfaizal/Documents/GitHub/AdvancedReact/Backend/node_modules/graphql-cli"
    ]
  ],
  "_from": "npm-run@4.1.2",
  "_id": "npm-run@4.1.2",
  "_inCache": true,
  "_location": "/npm-run",
  "_nodeVersion": "6.10.0",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/npm-run-4.1.2.tgz_1489753286363_0.04229710903018713"
  },
  "_npmUser": {
    "name": "timoxley",
    "email": "secoif@gmail.com"
  },
  "_npmVersion": "4.3.0",
  "_phantomChildren": {
    "lru-cache": "4.1.3",
    "shebang-command": "1.2.0",
    "which": "1.3.1"
  },
  "_requested": {
    "raw": "npm-run@4.1.2",
    "scope": null,
    "escapedName": "npm-run",
    "name": "npm-run",
    "rawSpec": "4.1.2",
    "spec": "4.1.2",
    "type": "version"
  },
  "_requiredBy": [
    "/graphql-cli",
    "/prisma-cli-core",
    "/prisma-generate-schema/prisma-cli-core"
  ],
  "_resolved": "https://registry.npmjs.org/npm-run/-/npm-run-4.1.2.tgz",
  "_shasum": "1030e1ec56908c89fcc3fa366d03a2c2ba98eb99",
  "_shrinkwrap": null,
  "_spec": "npm-run@4.1.2",
  "_where": "/Users/thoriqnurfaizal/Documents/GitHub/AdvancedReact/Backend/node_modules/graphql-cli",
  "author": {
    "name": "Tim Oxley"
  },
  "bin": {
    "npm-run": "bin/npm-run.js"
  },
  "bugs": {
    "url": "https://github.com/timoxley/npm-run/issues"
  },
  "dependencies": {
    "cross-spawn": "^5.1.0",
    "minimist": "^1.2.0",
    "npm-path": "^2.0.3",
    "npm-which": "^3.0.1",
    "serializerr": "^1.0.3",
    "sync-exec": "^0.6.2"
  },
  "description": "Run executables for locally-installed packages without using ./node_modules/.bin",
  "devDependencies": {
    "bl": "^1.2.0",
    "standard": "^9.0.0",
    "tape": "^4.6.3"
  },
  "directories": {
    "test": "test"
  },
  "dist": {
    "shasum": "1030e1ec56908c89fcc3fa366d03a2c2ba98eb99",
    "tarball": "https://registry.npmjs.org/npm-run/-/npm-run-4.1.2.tgz"
  },
  "engines": {
    "node": ">=4.2.0"
  },
  "gitHead": "80a842e1509b8faaefaca65f06a8c23c2c971a2b",
  "homepage": "https://github.com/timoxley/npm-run",
  "keywords": [
    "npm",
    "path",
    "executable",
    ".bin",
    "run"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "timoxley",
      "email": "secoif@gmail.com"
    }
  ],
  "name": "npm-run",
  "optionalDependencies": {},
  "readme": "# npm-run\n\n[![NPM](https://nodei.co/npm/npm-run.png?downloads=true&downloadRank=true)](https://nodei.co/npm-dl/npm-run/)\n[![NPM](https://nodei.co/npm-dl/npm-run.png?months=3&height=3&chrome)](https://nodei.co/npm/npm-run/)\n\n[![Build Status](https://travis-ci.org/timoxley/npm-run.svg?branch=master)](https://travis-ci.org/timoxley/npm-run)\n\n### Run executables in node_modules from the command-line\n\nUse `npm-run` to ensure you're using the same version of a package on the command-line and in package.json scripts.\n\nAny executable available to an npm lifecycle script is available to `npm-run`.\n\n## Usage\n\n```bash\n> npm install mocha # mocha installed in ./node_modules\n> npm-run mocha test/* # uses locally installed mocha executable \n```\n\n```bash\n> npm-run --help\nUsage: npm-run command [...args]\nOptions:\n  --version  Display version & exit.\n  --help     Display this help & exit.\n\nHint: to print augmented path use:\nnpm-run node -p process.env.PATH\n```\n\n## Installation\n\n```bash\n> npm install -g npm-run\n```\n\n## Programmatic API\n\nThe API of `npm-run` basically wraps core `child_process` methods (exec, spawn, etc) such that locally install package executables will be on the PATH when the command runs.\n\n## npmRun(command[, options], callback)\n\nAlias of npmRun.exec.\n\n## npmRun.exec(command[, options], callback)\n\nTakes same arguments as node's [exec](https://nodejs.org/api/child_process.html#child_process_child_process_exec_command_options_callback).\n\n```js\nnpmRun.exec('mocha --debug-brk --sort', {cwd: __dirname + '/tests'}, function (err, stdout, stderr) {\n  // err Error or null if there was no error\n  // stdout Buffer|String\n  // stderr Buffer|String\n})\n```\n\n## npmRun.sync(command[, options])\n\nAlias of npmRun.execSync\n\n## npmRun.execSync(command[, options])\n\nTakes same arguments as node's [execSync](https://nodejs.org/api/child_process.html#child_process_child_process_execsync_command_options).\n\n```js\nvar stdout = npmRun.execSync(\n  'mocha --debug-brk --sort',\n  {cwd: __dirname + '/tests'}\n)\nstdout // command output as Buffer|String\n```\n\n## npmRun.spawnSync(command[, args][, options])\n\nTakes same arguments as node's [spawnSync](https://nodejs.org/api/child_process.html#child_process_child_process_spawnsync_command_args_options).\n\n```js\nvar child = npmRun.spawnSync(\n  'mocha',\n  '--debug-brk --sort'.split(' '),\n  {cwd: __dirname + '/tests'}\n)\nchild.stdout // stdout Buffer|String\nchild.stderr // stderr Buffer|String\nchild.status // exit code\n```\n\n## npmRun.spawn(command[, args][, options])\n\nTakes same arguments as node's [spawn](https://nodejs.org/api/child_process.html#child_process_child_process_spawn_command_args_options).\n\n```js\nvar child = npmRun.spawn(\n  'mocha',\n  '--debug-brk --sort'.split(' '),\n  {cwd: __dirname + '/tests'}\n)\nchild.stdout // stdout Stream\nchild.stderr // stderr Stream\nchild.on('exit', function (code) {\n  code // exit code\n})\n```\n\n## Why\n\nDue to npm's install algorithm `node_modules/.bin` is not guaranteed to contain your executable. `npm-run` uses the same mechanism npm uses to locate the correct executable.\n\n### See Also\n\n* [timoxley/npm-which](https://github.com/timoxley/npm-which)\n* [timoxley/npm-path](https://github.com/timoxley/npm-path)\n* [grncdr/npm-exec](https://github.com/grncdr/npm-exec)\n\n## License\n\nMIT\n",
  "readmeFilename": "Readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/timoxley/npm-run.git"
  },
  "scripts": {
    "lint": "standard",
    "test": "tape test/*.js && npm run lint"
  },
  "version": "4.1.2"
}
