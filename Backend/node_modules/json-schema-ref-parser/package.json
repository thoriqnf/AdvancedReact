{
  "_args": [
    [
      {
        "raw": "json-schema-ref-parser@^3.1.2",
        "scope": null,
        "escapedName": "json-schema-ref-parser",
        "name": "json-schema-ref-parser",
        "rawSpec": "^3.1.2",
        "spec": ">=3.1.2 <4.0.0",
        "type": "range"
      },
      "/Users/thoriqnurfaizal/Documents/GitHub/AdvancedReact/Backend/node_modules/@kbrandwijk/swagger-to-graphql"
    ]
  ],
  "_from": "json-schema-ref-parser@>=3.1.2 <4.0.0",
  "_id": "json-schema-ref-parser@3.3.1",
  "_inCache": true,
  "_location": "/json-schema-ref-parser",
  "_nodeVersion": "8.1.4",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/json-schema-ref-parser-3.3.1.tgz_1502288455478_0.6972590398509055"
  },
  "_npmUser": {
    "name": "bigstickcarpet",
    "email": "bigstickcarpet@gmail.com"
  },
  "_npmVersion": "5.3.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "json-schema-ref-parser@^3.1.2",
    "scope": null,
    "escapedName": "json-schema-ref-parser",
    "name": "json-schema-ref-parser",
    "rawSpec": "^3.1.2",
    "spec": ">=3.1.2 <4.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/@kbrandwijk/swagger-to-graphql"
  ],
  "_resolved": "https://registry.npmjs.org/json-schema-ref-parser/-/json-schema-ref-parser-3.3.1.tgz",
  "_shasum": "86e751b8099357bf601a7cfe42d10123ee906a32",
  "_shrinkwrap": null,
  "_spec": "json-schema-ref-parser@^3.1.2",
  "_where": "/Users/thoriqnurfaizal/Documents/GitHub/AdvancedReact/Backend/node_modules/@kbrandwijk/swagger-to-graphql",
  "author": {
    "name": "James Messinger",
    "url": "http://jamesmessinger.com"
  },
  "browser": {
    "fs": false
  },
  "bugs": {
    "url": "https://github.com/BigstickCarpet/json-schema-ref-parser/issues"
  },
  "contributors": [
    {
      "name": "Boris Cherny",
      "email": "boris@performancejs.com"
    }
  ],
  "dependencies": {
    "call-me-maybe": "^1.0.1",
    "debug": "^3.0.0",
    "es6-promise": "^4.1.1",
    "js-yaml": "^3.9.1",
    "ono": "^4.0.2",
    "z-schema": "^3.18.2"
  },
  "description": "Parse, Resolve, and Dereference JSON Schema $ref pointers",
  "devDependencies": {
    "@types/json-schema": "^4.0.0",
    "bower": "^1.8.0",
    "chai": "^4.1.1",
    "coveralls": "^2.13.1",
    "eslint": "^4.4.1",
    "http-server": "^0.10.0",
    "istanbul": "^0.4.5",
    "jscs": "^3.0.7",
    "karma": "^1.7.0",
    "karma-chrome-launcher": "^2.2.0",
    "karma-cli": "^1.0.1",
    "karma-coverage": "^1.1.1",
    "karma-firefox-launcher": "^1.0.1",
    "karma-ie-launcher": "^1.0.0",
    "karma-mocha": "^1.3.0",
    "karma-safari-launcher": "^1.0.0",
    "karma-sauce-launcher": "^1.1.0",
    "karma-verbose-reporter": "0.0.6",
    "mocha": "^3.5.0",
    "npm-check-updates": "^2.12.1",
    "simplifyify": "3.2.1",
    "sinon": "^3.1.0",
    "version-bump-prompt": "^3.1.2"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-stQTMhec2R/p2L9dH4XXRlpNCP0mY8QrLd/9Kl+8SHJQmwHtE1nDfXH4wbsSM+GkJMl8t92yZbI0OIol432CIQ==",
    "shasum": "86e751b8099357bf601a7cfe42d10123ee906a32",
    "tarball": "https://registry.npmjs.org/json-schema-ref-parser/-/json-schema-ref-parser-3.3.1.tgz"
  },
  "gitHead": "f82aeef3cbfc7587510ea971fb3349f56a63f231",
  "homepage": "https://github.com/BigstickCarpet/json-schema-ref-parser",
  "keywords": [
    "json",
    "schema",
    "jsonschema",
    "json-schema",
    "json-pointer",
    "$ref",
    "dereference",
    "resolve"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "bigstickcarpet",
      "email": "bigstickcarpet@gmail.com"
    }
  ],
  "name": "json-schema-ref-parser",
  "optionalDependencies": {},
  "readme": "JSON Schema $Ref Parser\n============================\n#### Parse, Resolve, and Dereference JSON Schema $ref pointers\n\n[![Build Status](https://api.travis-ci.org/BigstickCarpet/json-schema-ref-parser.svg?branch=master)](https://travis-ci.org/BigstickCarpet/json-schema-ref-parser)\n[![Dependencies](https://david-dm.org/BigstickCarpet/json-schema-ref-parser.svg)](https://david-dm.org/BigstickCarpet/json-schema-ref-parser)\n[![Coverage Status](https://coveralls.io/repos/BigstickCarpet/json-schema-ref-parser/badge.svg?branch=master&service=github)](https://coveralls.io/r/BigstickCarpet/json-schema-ref-parser)\n[![Code Climate Score](https://codeclimate.com/github/BigstickCarpet/json-schema-ref-parser/badges/gpa.svg)](https://codeclimate.com/github/BigstickCarpet/json-schema-ref-parser)\n[![Codacy Score](https://www.codacy.com/project/badge/d8abfe5e9a4044b89bd9f4b999d4a574)](https://www.codacy.com/public/jamesmessinger/json-schema-ref-parser)\n[![Inline docs](http://inch-ci.org/github/BigstickCarpet/json-schema-ref-parser.svg?branch=master&style=shields)](http://inch-ci.org/github/BigstickCarpet/json-schema-ref-parser)\n\n[![npm](http://img.shields.io/npm/v/json-schema-ref-parser.svg)](https://www.npmjs.com/package/json-schema-ref-parser)\n[![Bower](http://img.shields.io/bower/v/json-schema-ref-parser.svg)](http://bower.io/)\n[![License](https://img.shields.io/npm/l/json-schema-ref-parser.svg)](LICENSE)\n\n[![Browser Compatibility](https://saucelabs.com/browser-matrix/json-schema-parser.svg)](https://saucelabs.com/u/json-schema-parser)\n\n\nThe Problem:\n--------------------------\nYou've got a JSON Schema with `$ref` pointers to other files and/or URLs.  Maybe you know all the referenced files ahead of time.  Maybe you don't.  Maybe some are local files, and others are remote URLs.  Maybe they are a mix of JSON and YAML format.  Maybe some of the files contain cross-references to each other.\n\n```javascript\n{\n  \"definitions\": {\n    \"person\": {\n      // references an external file\n      \"$ref\": \"schemas/people/Bruce-Wayne.json\"\n    },\n    \"place\": {\n      // references a sub-schema in an external file\n      \"$ref\": \"schemas/places.yaml#/definitions/Gotham-City\"\n    },\n    \"thing\": {\n      // references a URL\n      \"$ref\": \"http://wayne-enterprises.com/things/batmobile\"\n    },\n    \"color\": {\n      // references a value in an external file via an internal reference\n      \"$ref\": \"#/definitions/thing/properties/colors/black-as-the-night\"\n    }\n  }\n}\n```\n\n\nThe Solution:\n--------------------------\nJSON Schema $Ref Parser is a full [JSON Reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) and [JSON Pointer](https://tools.ietf.org/html/rfc6901) implementation that crawls even the most complex [JSON Schemas](http://json-schema.org/latest/json-schema-core.html) and gives you simple, straightforward JavaScript objects.\n\n- Use **JSON** or **YAML** schemas &mdash; or even a mix of both!\n- Supports `$ref` pointers to external files and URLs, as well as [custom sources](docs/plugins/resolvers.md) such as databases\n- Can [bundle](docs/ref-parser.md#bundlepath-options-callback) multiple files into a single schema that only has _internal_ `$ref` pointers\n- Can [dereference](docs/ref-parser.md#dereferencepath-options-callback) your schema, producing a plain-old JavaScript object that's easy to work with\n- Supports [circular references](docs/README.md#circular-refs), nested references, back-references, and cross-references between files\n- Maintains object reference equality &mdash; `$ref` pointers to the same value always resolve to the same object instance\n- [Tested](http://bigstickcarpet.github.io/json-schema-ref-parser/test/index.html) in Node, io.js, and all major web browsers on Windows, Mac, and Linux\n\n\nExample\n--------------------------\n\n```javascript\n$RefParser.dereference(mySchema, function(err, schema) {\n  if (err) {\n    console.error(err);\n  }\n  else {\n    // `schema` is just a normal JavaScript object that contains your entire JSON Schema,\n    // including referenced files, combined into a single object\n    console.log(schema.definitions.person.properties.firstName);\n  }\n});\n```\n\nOr use [Promises syntax](http://javascriptplayground.com/blog/2015/02/promises/) instead. The following example is the same as above:\n\n```javascript\n$RefParser.dereference(mySchema)\n  .then(function(schema) {\n    console.log(schema.definitions.person.properties.firstName);\n  })\n  .catch(function(err) {\n    console.error(err);\n  });\n```\n\nFor more detailed examples, please see the [API Documentation](docs/README.md)\n\n\nInstallation\n--------------------------\n#### Node\nInstall using [npm](https://docs.npmjs.com/getting-started/what-is-npm):\n\n```bash\nnpm install json-schema-ref-parser\n```\n\nThen require it in your code:\n\n```javascript\nvar $RefParser = require('json-schema-ref-parser');\n```\n\n#### Web Browsers\nInstall using [bower](http://bower.io/):\n\n```bash\nbower install json-schema-ref-parser\n```\n\nThen reference [`ref-parser.js`](dist/ref-parser.js) or [`ref-parser.min.js`](dist/ref-parser.min.js) in your HTML:\n\n```html\n<script src=\"bower_components/json-schema-ref-parser/dist/ref-parser.js\"></script>\n```\n\nOr, if you're using AMD (Require.js), then import it into your module:\n\n```javascript\ndefine([\"ref-parser\"], function($RefParser) { /* your module's code */ })\n```\n\n\nAPI Documentation\n--------------------------\nFull API documentation is available [right here](docs/README.md)\n\n\nContributing\n--------------------------\nI welcome any contributions, enhancements, and bug-fixes.  [File an issue](https://github.com/BigstickCarpet/json-schema-ref-parser/issues) on GitHub and [submit a pull request](https://github.com/BigstickCarpet/json-schema-ref-parser/pulls).\n\n#### Building/Testing\nTo build/test the project locally on your computer:\n\n1. __Clone this repo__<br>\n`git clone https://github.com/bigstickcarpet/json-schema-ref-parser.git`\n\n2. __Install dependencies__<br>\n`npm install`\n\n3. __Run the build script__<br>\n`npm run build`\n\n4. __Run the unit tests__<br>\n`npm run mocha` (test in Node)<br>\n`npm run karma` (test in web browsers)<br>\n`npm test` (test in Node and browsers, and report code coverage)\n\n5. __Start the local web server__<br>\n`npm start` (then browse to [http://localhost:8080/test/index.html](http://bigstickcarpet.com/json-schema-ref-parser/test/index.html))\n\n\nLicense\n--------------------------\nJSON Schema $Ref Parser is 100% free and open-source, under the [MIT license](LICENSE). Use it however you want.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/BigstickCarpet/json-schema-ref-parser.git"
  },
  "scripts": {
    "browserify": "simplifyify lib/index.js --outfile dist/ref-parser.js --standalone \\$RefParser --bundle --debug --minify",
    "build": "npm run lint && npm run browserify",
    "bump": "bump --prompt --grep lib/bundle.js dist/* --tag --push --all",
    "istanbul": "istanbul cover _mocha --dir coverage/node",
    "karma": "karma start --single-run",
    "lint": "eslint lib --fix && jscs lib --verbose",
    "mocha": "mocha",
    "release": "npm run upgrade && npm test && npm run bump && npm publish",
    "start": "npm run watch & http-server -o -c-1",
    "test": "npm run browserify -- --test && npm run istanbul && npm run karma",
    "upgrade": "ncu --upgradeAll && npm update && bower update",
    "watch": "npm run browserify -- --watch"
  },
  "typings": "lib/index.d.ts",
  "version": "3.3.1"
}
