{
  "_args": [
    [
      {
        "raw": "scuid@^1.0.2",
        "scope": null,
        "escapedName": "scuid",
        "name": "scuid",
        "rawSpec": "^1.0.2",
        "spec": ">=1.0.2 <2.0.0",
        "type": "range"
      },
      "/Users/thoriqnurfaizal/Documents/GitHub/AdvancedReact/Backend/node_modules/graphcool-yml"
    ]
  ],
  "_from": "scuid@>=1.0.2 <2.0.0",
  "_id": "scuid@1.1.0",
  "_inCache": true,
  "_location": "/scuid",
  "_nodeVersion": "9.4.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/scuid-1.1.0.tgz_1517787073542_0.455530728911981"
  },
  "_npmUser": {
    "name": "jhermsmeier",
    "email": "jhermsmeier@gmail.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "scuid@^1.0.2",
    "scope": null,
    "escapedName": "scuid",
    "name": "scuid",
    "rawSpec": "^1.0.2",
    "spec": ">=1.0.2 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/graphcool-yml",
    "/prisma-cli-core",
    "/prisma-cli-core/graphql-config-extension-prisma/prisma-yml",
    "/prisma-cli-core/prisma-yml",
    "/prisma-cli-engine",
    "/prisma-cli-engine/prisma-yml",
    "/prisma-db-introspection",
    "/prisma-db-introspection/prisma-yml",
    "/prisma-generate-schema/graphql-config-extension-prisma/prisma-yml",
    "/prisma-generate-schema/graphql-playground-html/graphcool-yml",
    "/prisma-generate-schema/prisma-cli-core",
    "/prisma-generate-schema/prisma-cli-engine",
    "/prisma-generate-schema/prisma-cli-engine/prisma-yml",
    "/prisma-generate-schema/prisma-yml",
    "/prisma-yml"
  ],
  "_resolved": "https://registry.npmjs.org/scuid/-/scuid-1.1.0.tgz",
  "_shasum": "d3f9f920956e737a60f72d0e4ad280bf324d5dab",
  "_shrinkwrap": null,
  "_spec": "scuid@^1.0.2",
  "_where": "/Users/thoriqnurfaizal/Documents/GitHub/AdvancedReact/Backend/node_modules/graphcool-yml",
  "author": {
    "name": "Jonas Hermsmeier",
    "email": "jhermsmeier@gmail.com",
    "url": "https://jhermsmeier.de"
  },
  "bugs": {
    "url": "https://github.com/jhermsmeier/node-scuid/issues"
  },
  "dependencies": {},
  "description": "Collision-resistant IDs optimized for horizontal scaling and performance",
  "devDependencies": {
    "cuid": "^2.0.2",
    "matcha": "^0.7.0",
    "tap-diff": "^0.1.1",
    "tape": "^4.8.0",
    "tape-catch": "^1.0.6"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-MuCAyrGZcTLfQoH2XoBlQ8C6bzwN88XT/0slOGz0pn8+gIP85BOAfYa44ZXQUTOwRwPU0QvgU+V+OSajl/59Xg==",
    "shasum": "d3f9f920956e737a60f72d0e4ad280bf324d5dab",
    "tarball": "https://registry.npmjs.org/scuid/-/scuid-1.1.0.tgz"
  },
  "gitHead": "84e96962ff5eaae2ab2bcc2a9fae615e15204695",
  "homepage": "https://github.com/jhermsmeier/node-scuid",
  "keywords": [
    "id",
    "cuid",
    "uid",
    "unique",
    "uuid",
    "guid",
    "rng",
    "prng"
  ],
  "license": "MIT",
  "main": "lib/scuid.js",
  "maintainers": [
    {
      "name": "jhermsmeier",
      "email": "jhermsmeier@gmail.com"
    }
  ],
  "name": "scuid",
  "optionalDependencies": {},
  "peerDependencies": {},
  "readme": "# scuid\n[![npm](https://img.shields.io/npm/v/scuid.svg?style=flat-square)](https://npmjs.com/package/scuid)\n[![npm license](https://img.shields.io/npm/l/scuid.svg?style=flat-square)](https://npmjs.com/package/scuid)\n[![npm downloads](https://img.shields.io/npm/dm/scuid.svg?style=flat-square)](https://npmjs.com/package/scuid)\n[![build status](https://img.shields.io/travis/jhermsmeier/node-scuid.svg?style=flat-square)](https://travis-ci.org/jhermsmeier/node-scuid)\n\nCollision-resistant IDs optimized for horizontal scaling and performance.\n\nA slim, alternative, and compatible implementation of [cuid] for node,\nalso featuring a wide range of options, as well as custom random number generator support.\nIt can serve as a drop-in replacement, and is also faster than [cuid].\n\n[cuid]: https://github.com/ericelliott/cuid\n\n## Install via [npm](https://npmjs.com)\n\n```sh\n$ npm install --save scuid\n```\n\n## Usage\n\n```js\nvar scuid = require( 'scuid' )\n```\n\n**Generate an ID**\n\n```js\nvar id = scuid()\n> 'ciux3hs0x0000io10cusdm8r2'\n```\n\n**Generate a slug**\n\n```js\nvar slug = scuid.slug()\n> '6x1i0r0'\n```\n\n**Get the process' fingerprint**\n\n```js\nvar fingerprint = scuid.fingerprint()\n> 'io10'\n```\n\n**Use a custom (P)RNG**\n\n```js\n// Create a random number generator;\n// It has to have a method called `random`\nvar generator = {\n  random: function() {\n    return 5 // chosen by fair dice roll\n  }\n}\n\n// Create a custom scuid instance\nvar scuid = require( 'scuid' ).create({\n  rng: generator\n})\n```\n\n**Use other custom options**\n\nNote that fiddeling with these might make your IDs incompatible with [cuid]'s guarantees.\n\n```js\nvar scuid = require( 'scuid' ).create({\n  prefix: 'c', // the ID's prefix\n  base: 36, // radix used in .toString() calls (2-36)\n  blockSize: 4, // block size to pad and trim to\n  fill: '0', // block padding character\n  pid: process.pid, // process ID\n  fingerprint: scuid.createFingerprint( [pid], [hostname] ), // Machine fingerprint\n  rng: Math, // Random number generator\n})\n```\n\n## Tests\n\nJust like `cuid`, collision resistance for both – slugs and IDs – is tested\nover 1 million and 2 million iterations respectively.\nTo run the tests, run:\n\n```\n$ npm test\n```\n\n## Benchmarks\n\n```\n$ npm run benchmark\n```\n\n```\nscuid\n  id ............................................. 573,618 op/s\n  slug ........................................... 673,732 op/s\n  fingerprint .................................... 131,156,394 op/s\n\ncuid\n  id ............................................. 445,260 op/s\n  slug ........................................... 531,770 op/s\n  fingerprint .................................... 125,159,685 op/s\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jhermsmeier/node-scuid.git"
  },
  "scripts": {
    "benchmark": "matcha --reporter plain",
    "test": "tape test/*.js | tap-diff"
  },
  "version": "1.1.0"
}
