{
  "_args": [
    [
      {
        "raw": "prisma-cli-core@1.0.5-2",
        "scope": null,
        "escapedName": "prisma-cli-core",
        "name": "prisma-cli-core",
        "rawSpec": "1.0.5-2",
        "spec": "1.0.5-2",
        "type": "version"
      },
      "/Users/thoriqnurfaizal/Documents/GitHub/AdvancedReact/Backend/node_modules/prisma-generate-schema/node_modules/prisma-cli"
    ]
  ],
  "_from": "prisma-cli-core@1.0.5-2",
  "_id": "prisma-cli-core@1.0.5-2",
  "_inCache": true,
  "_location": "/prisma-generate-schema/prisma-cli-core",
  "_nodeVersion": "9.4.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/prisma-cli-core-1.0.5-2.tgz_1516818019415_0.7062440488953143"
  },
  "_npmUser": {
    "name": "timsuchanek",
    "email": "tim.suchanek@gmail.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "prisma-cli-core@1.0.5-2",
    "scope": null,
    "escapedName": "prisma-cli-core",
    "name": "prisma-cli-core",
    "rawSpec": "1.0.5-2",
    "spec": "1.0.5-2",
    "type": "version"
  },
  "_requiredBy": [
    "/prisma-generate-schema/prisma-cli"
  ],
  "_resolved": "https://registry.npmjs.org/prisma-cli-core/-/prisma-cli-core-1.0.5-2.tgz",
  "_shasum": "8d14ded3614e67baa958481f7a546ac28b6fceb0",
  "_shrinkwrap": null,
  "_spec": "prisma-cli-core@1.0.5-2",
  "_where": "/Users/thoriqnurfaizal/Documents/GitHub/AdvancedReact/Backend/node_modules/prisma-generate-schema/node_modules/prisma-cli",
  "author": {
    "name": "Tim Suchanek",
    "email": "tim@graph.cool"
  },
  "dependencies": {
    "archiver": "^2.0.3",
    "callsites": "^2.0.0",
    "chalk": "^2.3.0",
    "chokidar": "^1.7.0",
    "copy-paste": "^1.3.0",
    "cross-spawn": "^5.1.0",
    "download-github-repo": "^0.1.3",
    "figures": "^2.0.0",
    "find-up": "^2.1.0",
    "fs-extra": "^5.0.0",
    "globby": "^6.1.0",
    "graphcool-inquirer": "^1.0.3",
    "graphql": "^0.11.7",
    "graphql-cli": "2.12.2",
    "graphql-config": "^1.1.7",
    "inquirer": "^3.3.0",
    "isomorphic-fetch": "^2.2.1",
    "js-yaml": "^3.9.1",
    "jwt-decode": "^2.2.0",
    "lodash": "^4.17.4",
    "lodash.differenceby": "^4.8.0",
    "multimatch": "^2.1.0",
    "node-forge": "^0.7.1",
    "npm-run": "^4.1.2",
    "opn": "^5.1.0",
    "pause": "^0.1.0",
    "portfinder": "^1.0.13",
    "prisma-json-schema": "^0.0.1",
    "prisma-yml": "1.0.14-4",
    "scuid": "^1.0.2",
    "semver": "^5.4.1",
    "sillyname": "^0.1.0",
    "source-map-support": "^0.4.18",
    "table": "^4.0.1",
    "unzip": "^0.1.11",
    "util.promisify": "^1.0.0",
    "validator": "^8.2.0"
  },
  "description": "<a href=\"https://www.prismagraphql.com\"><img src=\"https://imgur.com/HUu10rH.png\" width=\"248\" /></a>",
  "devDependencies": {
    "@types/aws-lambda": "^0.0.17",
    "@types/fs-extra": "^5.0.0",
    "@types/graphql": "^0.11.7",
    "@types/node": "^8.0.22",
    "faker": "^4.1.0",
    "husky": "^0.14.3",
    "jest": "^21.0.2",
    "lint-staged": "^4.2.3",
    "nock": "^9.0.14",
    "prettier": "^1.10.2",
    "rimraf": "^2.6.1",
    "ts-jest": "^21.0.0",
    "tslint": "^5.6.0",
    "tslint-config-prettier": "^1.3.0",
    "tslint-eslint-rules": "^4.1.1",
    "typescript": "^2.6.2",
    "watch-cli": "^0.2.3"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-Pv57S2ZaYoDonOxI94QHhODJ3oRM9ZaxdiqGAkGsTT4CTRVu39tZovFRvVTVXvtKM4175KUWFAtaps9+5a1d8w==",
    "shasum": "8d14ded3614e67baa958481f7a546ac28b6fceb0",
    "tarball": "https://registry.npmjs.org/prisma-cli-core/-/prisma-cli-core-1.0.5-2.tgz"
  },
  "engines": {
    "node": ">=6.0.0"
  },
  "files": [
    "dist"
  ],
  "jest": {
    "moduleFileExtensions": [
      "ts",
      "tsx",
      "js",
      "jsx",
      "json"
    ],
    "rootDir": "./src",
    "transform": {
      "^.+\\.(ts|tsx)$": "../../../node_modules/ts-jest/preprocessor.js"
    },
    "testMatch": [
      "**/*.test.(ts|js)"
    ],
    "setupFiles": [
      "../test/init.js"
    ],
    "globals": {
      "ts-jest": {
        "tsConfigFile": "./tsconfig.json"
      }
    }
  },
  "license": "Apache-2.0",
  "lint-staged": {
    "gitDir": "../../../"
  },
  "linters": {
    "*.ts": [
      "prettier --single-quote --no-semi --trailing-comma all --write",
      "tslint",
      "jest --findRelatedTests",
      "git add"
    ]
  },
  "main": "dist/index.js",
  "maintainers": [
    {
      "name": "timsuchanek",
      "email": "tim.suchanek@gmail.com"
    }
  ],
  "name": "prisma-cli-core",
  "optionalDependencies": {},
  "readme": "<a href=\"https://www.prismagraphql.com\"><img src=\"https://imgur.com/HUu10rH.png\" width=\"248\" /></a>\n\n[Website](https://www.prismagraphql.com) â€¢ [Docs](https://www.prismagraphql.com/docs/) â€¢ [Blog](https://blog.graph.cool/) â€¢ [Forum](https://www.graph.cool/forum) â€¢ [Slack](https://slack.graph.cool/) â€¢ [Twitter](https://twitter.com/graphcool)\n\n[![Slack Status](https://slack.graph.cool/badge.svg)](https://slack.graph.cool) [![npm version](https://badge.fury.io/js/graphcool.svg)](https://badge.fury.io/js/graphcool)\n\n**Prisma - turn your database into a GraphQL API**. Prisma lets you design your data model and have a production ready [GraphQL](https://www.howtographql.com/) API online in minutes.\n\nThe Prisma GraphQL API provides powerful abstractions and building blocks to develop flexible, scalable GraphQL backends:\n\n1. **Type-safe API** that can be used from frontend and backend, including filters, aggregations and transactions.\n2. **Data modeling** with declarative SDL. Prisma migrates your underlying database automatically.\n3. **Realtime API** using GraphQL Subscriptions.\n4. **Advanced API composition** using GraphQL Bindings and schema stitching.\n5. **Works with all frontend frameworks** like React, Vue.js, Angular ([Quickstart Examples](https://www.prismagraphql.com/docs/quickstart/)).\n\n## Contents\n\n<!--\n<img align=\"right\" width=\"400\" src=\"https://imgur.com/EsopgE3.gif\" />\n-->\n\n* [Quickstart](#quickstart)\n* [Examples](#examples)\n* [Architecture](#architecture)\n* [Supported Database](#supported-databases)\n* [GraphQL API](#graphql-api)\n* [Community](#community)\n* [Contributing](#contributing)\n\n## Quickstart\n\n[Watch this 5 min tutorial](https://www.youtube.com/watch?v=g0wFABHMzL4) or follow the steps below to get started with Prisma:\n\n1. **Install the CLI via NPM:**\n\n```sh\nnpm install -g prisma\n```\n\n2. **Create a new service:**\n\nThe following command creates all files you need for a new [service](https://www.prismagraphql.com/docs/reference/service-configuration/overview-ieshoo5ohm).\n\n```sh\nprisma init\n```\n\n3. **Define your data model:**\n\nEdit `datamodel.graphql` to define your data model using the [GraphQL SDL notation](https://www.prismagraphql.com/docs/reference/service-configuration/data-modelling-(sdl)-eiroozae8u).\n\n```graphql\ntype Tweet {\n  id: ID! @unique\n  createdAt: DateTime!\n  text: String!\n  owner: User!\n  location: Location!\n}\n\ntype User {\n  id: ID! @unique\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  handle: String! @unique\n  name: String\n  tweets: [Tweet!]!\n}\n\ntype Location {\n  latitude: Float!\n  longitude: Float!\n}\n```\n\n5. **Deploy your service:**\n\nTo deploy your service simply run the following command and select one of the hosted development clusters or setup a local Docker-based development environment:\n\n```sh\nprisma deploy\n```\n\n6. **Connect to your GraphQL endpoint:**\n\nUse the endpoint from the previous step in your frontend (or backend) applications to connect to your GraphQL API.\n\n7 **Read more in the dedicated quickstarts for your favorite technology**\n\n[![](https://imgur.com/T5nakij.png)](https://www.prismagraphql.com/docs/quickstart/)\n\n## Examples\n\n- [demo-application](https://github.com/graphcool/graphql-server-example)\n- [auth](examples/auth)\n- [file-api](examples/file-api)\n- [github-auth](examples/github-auth)\n- [permissions](examples/permissions)\n- [resolver-forwarding](examples/resolver-forwarding)\n- [rest-wrapper](examples/rest-wrapper)\n- [subscriptions](examples/subscriptions)\n\n\n## Architecture\n\nPrisma is a secure API layer that sits in front of your database. Acting as a proxy, Prisma exposes a powerful GraphQL API and manages Rate-Limiting, Authentication, Logging and a host of other features. Because Prisma is a standalone process, it can be scaled independently from your application layer and provide scalable subscriptions infrastructure.\n\n![](https://imgur.com/SdssPgT.png)\n\n## Supported Databases\n\nPrisma can be used for MySQL Databases out of the box. More databases connectors will follow:\n\n* [PostgreSQL Connector](https://github.com/graphcool/prisma/issues/1641)\n* [MS SQL Connector](https://github.com/graphcool/prisma/issues/1642)\n* [MongoDB Connector](https://github.com/graphcool/prisma/issues/1643)\n* [Oracle Connector](https://github.com/graphcool/prisma/issues/1644)\n* [ArangoDB Connector](https://github.com/graphcool/prisma/issues/1645)\n* [Neo4j Connector](https://github.com/graphcool/prisma/issues/1646)\n* [Druid Connector](https://github.com/graphcool/prisma/issues/1647)\n* [Dgraph Connector](https://github.com/graphcool/prisma/issues/1648)\n\nJoin the discussion or contribute to influence which we'll work on next!\n\n## GraphQL API\n\nThe most important component in Prisma is the GraphQL API:\n\n* Query, mutate & stream data via GraphQL CRUD API\n* Define and evolve your data model using GraphQL SDL\n\nTry the online demo: [open GraphQL Playground](https://www.prismagraphql.com/features)\n\n## Community\n\nPrisma has a community of thousands of amazing developers and contributors. Welcome, please join us! ðŸ‘‹\n\n* [Forum](https://www.graph.cool/forum)\n* [Slack](https://slack.graph.cool/)\n* [Twitter](https://twitter.com/graphcool)\n* [Facebook](https://www.facebook.com/GraphcoolHQ)\n* [Meetup](https://www.meetup.com/graphql-berlin)\n* [Email](hello@graph.cool)\n\n## Contributing\n\nYour feedback is **very helpful**, please share your opinion and thoughts!\n\n* [Request a new feature](https://github.com/graphcool/prisma/issues/new)\n* [Report a bug](https://github.com/graphcool/prisma/issues/new)\n* [Participate in existing discussions](https://github.com/graphcool/prisma/issues)\n\n\n",
  "readmeFilename": "README.md",
  "scripts": {
    "build": "rimraf dist && tsc -d && scripts/cp-assets.sh",
    "lint": "tslint src/**/*.ts",
    "precommit": "lint-staged",
    "prepublishOnly": "yarn lint && yarn test && yarn build",
    "prettier": "prettier --single-quote --no-semi --trailing-comma all --write '*.ts' 'src/**/*.ts'",
    "test": "NODE_ENV=test jest",
    "watch": "../../node_modules/.bin/watch -p 'src/**/*.*' -c 'yarn build'"
  },
  "typings": "dist/index.d.ts",
  "version": "1.0.5-2"
}
