{
  "_args": [
    [
      {
        "raw": "graphql-cli@2.12.2",
        "scope": null,
        "escapedName": "graphql-cli",
        "name": "graphql-cli",
        "rawSpec": "2.12.2",
        "spec": "2.12.2",
        "type": "version"
      },
      "/Users/thoriqnurfaizal/Documents/GitHub/AdvancedReact/Backend/node_modules/prisma-generate-schema/node_modules/prisma-cli-core"
    ]
  ],
  "_from": "graphql-cli@2.12.2",
  "_id": "graphql-cli@2.12.2",
  "_inCache": true,
  "_location": "/prisma-generate-schema/graphql-cli",
  "_nodeVersion": "9.4.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/graphql-cli-2.12.2.tgz_1516014384266_0.7643427553121"
  },
  "_npmUser": {
    "name": "schickling",
    "email": "schickling.j@gmail.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {
    "ansi-escapes": "3.1.0",
    "buffer-from": "1.1.1",
    "chalk": "2.4.1",
    "cli-cursor": "2.1.0",
    "cli-width": "2.2.0",
    "external-editor": "2.2.0",
    "figures": "2.0.0",
    "graphql-import": "0.4.0",
    "graphql-request": "1.8.2",
    "js-yaml": "3.12.0",
    "lodash": "4.17.11",
    "minimatch": "3.0.4",
    "mute-stream": "0.0.7",
    "run-async": "2.3.0",
    "rxjs": "5.5.12",
    "source-map": "0.6.1",
    "string-width": "2.1.1",
    "strip-ansi": "4.0.0",
    "through": "2.3.8"
  },
  "_requested": {
    "raw": "graphql-cli@2.12.2",
    "scope": null,
    "escapedName": "graphql-cli",
    "name": "graphql-cli",
    "rawSpec": "2.12.2",
    "spec": "2.12.2",
    "type": "version"
  },
  "_requiredBy": [
    "/prisma-generate-schema/prisma-cli-core"
  ],
  "_resolved": "https://registry.npmjs.org/graphql-cli/-/graphql-cli-2.12.2.tgz",
  "_shasum": "d175e4835112eeeed0fc38126808e99808222c21",
  "_shrinkwrap": null,
  "_spec": "graphql-cli@2.12.2",
  "_where": "/Users/thoriqnurfaizal/Documents/GitHub/AdvancedReact/Backend/node_modules/prisma-generate-schema/node_modules/prisma-cli-core",
  "bin": {
    "graphql": "dist/bin.js",
    "gql": "dist/bin.js"
  },
  "bugs": {
    "url": "https://github.com/graphql-cli/graphql-cli/issues"
  },
  "dependencies": {
    "adm-zip": "^0.4.7",
    "chalk": "^2.3.0",
    "command-exists": "^1.2.2",
    "cross-spawn": "^5.1.0",
    "disparity": "^2.0.0",
    "dotenv": "^4.0.0",
    "express": "^4.16.2",
    "express-request-proxy": "^2.0.0",
    "graphql": "0.12.3",
    "graphql-cli-prepare": "1.4.11",
    "graphql-config": "1.1.7",
    "graphql-config-extension-graphcool": "1.0.5",
    "graphql-config-extension-prisma": "0.0.3",
    "graphql-playground-middleware-express": "1.4.9",
    "graphql-schema-linter": "0.0.27",
    "inquirer": "5.0.0",
    "is-url-superb": "2.0.0",
    "js-yaml": "^3.10.0",
    "lodash": "^4.17.4",
    "node-fetch": "^1.7.3",
    "npm-paths": "^1.0.0",
    "opn": "^5.1.0",
    "ora": "^1.3.0",
    "parse-github-url": "^1.0.2",
    "request": "^2.83.0",
    "rimraf": "2.6.2",
    "source-map-support": "^0.5.0",
    "yargs": "10.1.1"
  },
  "description": "GraphQL CLI",
  "devDependencies": {
    "@types/express": "4.11.0",
    "@types/graphql": "0.11.8",
    "@types/inquirer": "0.0.36",
    "@types/lodash": "4.14.92",
    "@types/node": "9.3.0",
    "@types/node-fetch": "1.6.7",
    "@types/ora": "1.3.1",
    "@types/request": "2.0.10",
    "@types/rimraf": "2.0.2",
    "@types/yargs": "10.0.1",
    "ava": "0.24.0",
    "pkg": "4.3.0-beta.5",
    "ts-node": "4.1.0",
    "tslint": "5.9.1",
    "tslint-config-standard": "7.0.0",
    "typescript": "2.6.2"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-rq8esQIP/inviUd65apcNSR3t5SucUNZsFtByH5T7sTh+zBptYk/gRVDctqowPHa1cjMuMmeGyJy8ZAGs13ZCA==",
    "shasum": "d175e4835112eeeed0fc38126808e99808222c21",
    "tarball": "https://registry.npmjs.org/graphql-cli/-/graphql-cli-2.12.2.tgz"
  },
  "files": [
    "LICENSE",
    "README.md",
    "dist/"
  ],
  "gitHead": "082976438a492abbfd81a20d21d2dc1e2cf4ff1f",
  "homepage": "https://github.com/graphql-cli/graphql-cli#readme",
  "license": "MIT",
  "main": "dist/index.js",
  "maintainers": [
    {
      "name": "nikolasburk",
      "email": "nikolas.burk@gmail.com"
    },
    {
      "name": "schickling",
      "email": "schickling.j@gmail.com"
    },
    {
      "name": "martijnwalraven",
      "email": "martijn@martijnwalraven.com"
    }
  ],
  "name": "graphql-cli",
  "optionalDependencies": {},
  "pkg": {
    "scripts": "dist/**/*.js",
    "targets": [
      "node9-alpine-x64",
      "node9-linux-x64",
      "node9-macos-x64",
      "node9-win-x64"
    ]
  },
  "readme": "# graphql-cli\n\n[![npm version](https://badge.fury.io/js/graphql-cli.svg)](https://badge.fury.io/js/graphql-cli) [![CircleCI](https://circleci.com/gh/graphql-cli/graphql-cli.svg?style=shield)](https://circleci.com/gh/graphql-cli/graphql-cli)\n\nðŸ“Ÿ Command line tool for common GraphQL development workflows\n\n## Features\n\n- Helpful commands to improve your workflows like `get-schema`, `diff` & `playground`\n- Compatible with editors and IDEs based on [`graphql-config`](https://github.com/graphcool/graphql-config)\n- Powerful plugin system to extend `graphql-cli` with custom commands\n\nYou can see it in action here:\n\n![demo](http://imgur.com/0kuqZFY.gif)\n\n> Note: The `graphql-cli` has a different use case than the [Graphcool CLI](https://www.graph.cool/docs/reference/graphcool-cli/overview-zboghez5go/). Graphcool CLI is specific to the Graphcool Framework, while `graphql-cli` can be used with any GraphQL project.\n\n## Install\n\nYou can simply install the CLI using `npm` or `yarn` by running the following command. This will add the `graphql` (and shorter `gql`) binary to your path.\n\n```sh\nnpm install -g graphql-cli\n```\n\n\n## Usage\n```\nUsage: graphql [command]\n\nCommands:\n  graphql create [directory]             Bootstrap a new GraphQL project\n  graphql add-endpoint                   Add new endpoint to .graphqlconfig\n  graphql add-project                    Add new project to .graphqlconfig\n  graphql get-schema                     Download schema from endpoint\n  graphql schema-status                  Show source & timestamp of local schema\n  graphql ping                           Ping GraphQL endpoint\n  graphql query <file>                   Run query/mutation\n  graphql diff                           Show a diff between two schemas\n  graphql playground                     Open interactive GraphQL Playground\n  graphql lint                           Check schema for linting errors\n  graphql prepare                        Bundle schemas and generate bindings\n  graphql codegen [--target] [--output]  Generates apollo-codegen\n                                         code/annotations from your\n                                         .graphqlconfig\n\nOptions:\n  --dotenv       Path to .env file                                      [string]\n  -p, --project  Project name                                           [string]\n  -h, --help     Show help                                             [boolean]\n  -v, --version  Show version number                                   [boolean]\n\nExamples:\n  graphql init                 Interactively setup .graphqlconfig file\n  graphql get-schema -e dev    Update local schema to match \"dev\" endpoint\n  graphql diff -e dev -t prod  Show schema diff between \"dev\" and \"prod\"\n                               endpoints\n\nFor more information go to https://github.com/graphql-cli/graphql-cli\n\n```\n\n### Initial setup and schema download\n\n### Listen to schema changes\n\n### Autocompletion setup\nTo install autocompletion in your terminal run\n\n```\ngraphql completion >> ~/.bashrc\n```\n\nor on OSX\n\n```sh\ngraphql completion >> ~/.bash_profile\n```\n\n## Plugins\n\n- [`graphql-cli-voyager`](https://github.com/graphql-cli/graphql-cli-voyager) - Open [graphql-voyager](https://github.com/APIs-guru/graphql-voyager) in your browser\n- `graphql-cli-faker` (*coming soon*) - Run a fake server based on your schema using [graphql-faker](https://github.com/APIs-guru/graphql-faker)\n- [`graphql-cli-codegen`](https://github.com/rricard/graphql-cli-codegen) - Generates type annotation from your GraphQL queries using [`apollo-codegen`](https://github.com/apollographql/apollo-codegen).\n- [`graphql-cli-load`](https://github.com/neo4j-graphql/graphql-cli-load) - Easy batched loading of JSON/CSV files using your mutations, by matching input fields to mutation parameters from the schema.\n- [`graphql-cli-up`](https://github.com/supergraphql/graphql-cli-up) - Run `graphql-up` as `graphql up`.\n\nDo you want to create your own plugin? [Here is a simple example.](plugin-example)\n\n\n## Contributors\n\nA big thank you to all contributors and supporters of this repository ðŸ’š\n\n<a href=\"https://github.com/IvanGoncharov/\" target=\"_blank\">\n  <img src=\"https://github.com/IvanGoncharov.png?size=64\" width=\"64\" height=\"64\" alt=\"IvanGoncharov\">\n</a>\n<a href=\"https://github.com/RomanGotsiy/\" target=\"_blank\">\n  <img src=\"https://github.com/RomanGotsiy.png?size=64\" width=\"64\" height=\"64\" alt=\"RomanGotsiy\">\n</a>\n<a href=\"https://github.com/schickling/\" target=\"_blank\">\n  <img src=\"https://github.com/schickling.png?size=64\" width=\"64\" height=\"64\" alt=\"schickling\">\n</a>\n<a href=\"https://github.com/kbrandwijk/\" target=\"_blank\">\n  <img src=\"https://github.com/kbrandwijk.png?size=64\" width=\"64\" height=\"64\" alt=\"kbrandwijk\">\n</a>\n\n## Help & Community [![Slack Status](https://slack.graph.cool/badge.svg)](https://slack.graph.cool)\n\nJoin our [Slack community](http://slack.graph.cool/) if you run into issues or have questions. We love talking to you!\n\n![](http://i.imgur.com/5RHR6Ku.png)\n",
  "readmeFilename": "README.md",
  "release": {
    "publish": [
      "@semantic-release/npm",
      {
        "path": "@semantic-release/github",
        "assets": "packed/*"
      }
    ]
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/graphql-cli/graphql-cli.git"
  },
  "scripts": {
    "build": "rm -rf dist && tsc -d",
    "lint": "tslint {src,test}/**/*.ts",
    "pack": "pkg dist/bin.js -c package.json -o packed/graphql --options no-warnings",
    "prepack": "npm run build",
    "prepare": "npm run build",
    "pretest": "npm run build && npm run lint",
    "start": "ts-node src/bin.ts",
    "test": "ava --serial"
  },
  "typings": "./dist/index.d.ts",
  "version": "2.12.2"
}
