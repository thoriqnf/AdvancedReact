{
  "_args": [
    [
      {
        "raw": "exec-sh@^0.2.0",
        "scope": null,
        "escapedName": "exec-sh",
        "name": "exec-sh",
        "rawSpec": "^0.2.0",
        "spec": ">=0.2.0 <0.3.0",
        "type": "range"
      },
      "/Users/thoriqnurfaizal/Documents/GitHub/AdvancedReact/Frontend/node_modules/sane"
    ]
  ],
  "_from": "exec-sh@^0.2.0",
  "_hasShrinkwrap": false,
  "_id": "exec-sh@0.2.2",
  "_location": "/exec-sh",
  "_nodeVersion": "10.3.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/exec-sh_0.2.2_1530022078790_0.9739661525729357"
  },
  "_npmUser": {
    "name": "tsertkov",
    "email": "tsertkov@gmail.com"
  },
  "_npmVersion": "6.1.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "exec-sh@^0.2.0",
    "scope": null,
    "escapedName": "exec-sh",
    "name": "exec-sh",
    "rawSpec": "^0.2.0",
    "spec": ">=0.2.0 <0.3.0",
    "type": "range"
  },
  "_requiredBy": [
    "/sane",
    "/watch"
  ],
  "_resolved": "https://registry.npmjs.org/exec-sh/-/exec-sh-0.2.2.tgz",
  "_shasum": "2a5e7ffcbd7d0ba2755bdecb16e5a427dfbdec36",
  "_shrinkwrap": null,
  "_spec": "exec-sh@^0.2.0",
  "_where": "/Users/thoriqnurfaizal/Documents/GitHub/AdvancedReact/Frontend/node_modules/sane",
  "author": {
    "name": "Aleksandr Tsertkov",
    "email": "tsertkov@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/tsertkov/exec-sh/issues"
  },
  "dependencies": {
    "merge": "^1.2.0"
  },
  "description": "Execute shell command forwarding all stdio.",
  "devDependencies": {
    "coveralls": "^3.0.1",
    "istanbul": "^0.4.5",
    "jsdoc": "^3.5.5",
    "jshint": "^2.9.5",
    "mocha": "^5.2.0",
    "sinon": "^6.0.1",
    "standard": "^11.0.1"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-FIUCJz1RbuS0FKTdaAafAByGS0CPvU3R0MeHxgtl+djzCc//F8HakL8GzmVNZanasTbTAY/3DRFA0KpVqj/eAw==",
    "shasum": "2a5e7ffcbd7d0ba2755bdecb16e5a427dfbdec36",
    "tarball": "https://registry.npmjs.org/exec-sh/-/exec-sh-0.2.2.tgz",
    "fileCount": 8,
    "unpackedSize": 21217,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbMki+CRA9TVsSAnZWagAAOXEP/1Qhs0BkM/wkAS5T5BCV\nv3Usd8hi9KPUE0Zc612DYe4f6r7DEs7x9/kvAOckfgbz5bR+llBOnaIzscNy\nsqIj0fe5o945n0VvWmprvBfESiDQclonsQ3B7Ra4WxFjUvsr1pXGQ1kB1NEn\nsWHAmetz3G5Kvg4/p+zFoKdw9O07zWP8UHxoY/UD+1iDwa1pqKvQcMEYrHVY\nB8yrHiKn+s3pEhrgY61FkCs0mUUWgiTy1iB/RywYMaB31V/z/q3He1YTk0vk\nnmdYjavrTjmCWleCJNYsyCmS+vSLyjft9yPpbhB6q5TRKmfmqIgCKqWpz6IO\nWk9PgoMQ7kO63Y0a+kk8pxwy3e1L/3Nk1QRqJ8D9y98e5KfPrJkGTeA/6zqo\nkOljQiR7m03Y3CDcK4tyPuPuUNbX1FHYa3HLPGIuNtIWwPoQJkI5eXI+DGbg\n5pIy3KR2YsPk1OrtJZ63avCr0ONDIyco6Lkx74zlRuS/PmxViHmdDyNKqvvM\nU7KPzUl3iQBSKqalzAsXcZgOLZbn6ELAfuapf9KrZ6zjcQtcgslPui7yZBqu\nx4SeL03V/xws2W7BAmPpOGPGrl5QuuZCaeyEUQRwDjpYVqqJ3e6hwLvg90Xm\ns+zx3k/PmDmEXZPZkCzJFsFqRQ19VdDxSRT5Q/iQqK2Vvw9tlYxSi8qf7Xyp\nEhid\r\n=j+YP\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "0a520aa587bf7d21502cfb17512f33bc222396f3",
  "homepage": "https://github.com/tsertkov/exec-sh#readme",
  "keywords": [
    "exec",
    "spawn",
    "terminal",
    "console",
    "shell",
    "command",
    "child_process"
  ],
  "license": {
    "type": "MIT",
    "url": "https://github.com/tsertkov/exec-sh/blob/master/LICENSE"
  },
  "main": "lib/exec-sh.js",
  "maintainers": [
    {
      "name": "tsertkov",
      "email": "tsertkov@gmail.com"
    }
  ],
  "name": "exec-sh",
  "optionalDependencies": {},
  "readme": "# exec-sh\n\n[![NPM](https://nodei.co/npm/exec-sh.png)](https://nodei.co/npm/exec-sh/)\n\n[![NPM Downloads](https://img.shields.io/npm/dm/exec-sh.svg)](https://www.npmjs.com/package/exec-sh)\n[![Build Status](https://travis-ci.org/tsertkov/exec-sh.svg?branch=master)](https://travis-ci.org/tsertkov/exec-sh)\n[![Coverage Status](https://img.shields.io/coveralls/tsertkov/exec-sh.svg)](https://coveralls.io/r/tsertkov/exec-sh?branch=master)\n[![David Status](https://david-dm.org/tsertkov/exec-sh.png)](https://david-dm.org/tsertkov/exec-sh)\n\n> Execute shell command forwarding all stdio streams.\n\n## Features\n\nexec-sh is a wrapper for [`child_process.spawn`](http://nodejs.org/api/child_process.html#child_process_child_process_spawn_command_args_options) with some improvements:\n\n- Cross platform command execution:\n  - Windows: `cmd /C COMMAND`\n  - others: `sh -c COMMAND`\n- Fowrards all stdio streams to current terminal (by default):\n  - `execSh(\"bash\")`\n  - `execsh(\"echo -n Say: && read i && echo Said:$i\")`\n- stdout and stderr are passed to callback when available\n  - `execSh(\"pwd\", console.log)`\n\n## Showcase\n```javascript\n// JavaScript\n\nexecSh(\"echo hello exec-sh && bash\", { cwd: \"/home\" }, function(err){\n  if (err) {\n    console.log(\"Exit code: \", err.code);\n  }\n});\n```\n\n```sh\n# Terminal output: interactive bash session\n\nhello exec-sh\nbash-3.2$ pwd\n/home\nbash-3.2$ exit 99\nexit\nExit code:  99\n```\n\n## Usage\n\n```javascript\nvar execSh = require(\"../\");\n\n// run interactive bash shell\nexecSh(\"echo lorem && bash\", { cwd: \"/home\" }, function(err){\n  if (err) {\n    console.log(\"Exit code: \", err.code);\n    return;\n  }\n\n  // collect streams output\n  var child = execSh([\"bash -c id\", \"echo lorem >&2\"], true,\n    function(err, stdout, stderr){\n      console.log(\"error: \", err);\n      console.log(\"stdout: \", stdout);\n      console.log(\"stderr: \", stderr);\n    });\n});\n```\n\n## Public API\n\n### `execSh(command, [options], [callback])`\n\nExecute shell command forwarding all stdio.\n\n**Parameters:**\n\n- `command {String|Array}` - The command to run, or array of commands\n- `[options] {Object|TRUE}` - Options object passed directly to [`child_process.spawn`](http://nodejs.org/api/child_process.html#child_process_child_process_spawn_command_args_options), when `TRUE` then `{ stdio: null }` used\n- `[callback] {Function}` - `callback(err, stdout, stderr)`\n - `err {Error|NULL}` - Error object. Has `code` property containing last command exit code when available\n - `stdout {String|NULL}` - aggregated stdout or `NULL` if not available\n - `stderr {String|NULL}` - aggregated stderr or `NULL` if not available\n\n**Return Values:**\n\nReturns [ChildProcess](http://nodejs.org/api/child_process.html#child_process_class_childprocess) object.\n\n## Private API\nComplete API Documentation including private and public methods is generated from source code by JSDoc tool and is [available here](https://s3.eu-central-1.amazonaws.com/tsertkov-artifacts/exec-sh/master/jsdoc/index.html).\n\n## Code Coverage\nCode coverage report for all files is [available here](https://s3.eu-central-1.amazonaws.com/tsertkov-artifacts/exec-sh/master/coverage/lcov-report/index.html).\n\n## Scripts\n\n- `npm test` - run tests\n- `npm run jsdoc` - build jsdoc\n- `npm run dev` - run tests continuously\n\n## License\n\nThe MIT License (MIT)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/tsertkov/exec-sh.git"
  },
  "scripts": {
    "cover-test": "istanbul cover --dir artifacts/coverage _mocha -- --reporter spec",
    "dev": "mocha --reporter spec --watch",
    "jsdoc": "jsdoc --private --destination artifacts/jsdoc lib/",
    "lint": "standard --verbose **/*.js",
    "test": "npm run lint && npm run cover-test"
  },
  "version": "0.2.2"
}
