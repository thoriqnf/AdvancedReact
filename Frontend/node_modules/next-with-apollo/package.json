{
  "_args": [
    [
      {
        "raw": "next-with-apollo@^3.1.3",
        "scope": null,
        "escapedName": "next-with-apollo",
        "name": "next-with-apollo",
        "rawSpec": "^3.1.3",
        "spec": ">=3.1.3 <4.0.0",
        "type": "range"
      },
      "/Users/thoriqnurfaizal/Documents/GitHub/AdvancedReact/Frontend"
    ]
  ],
  "_from": "next-with-apollo@^3.1.3",
  "_hasShrinkwrap": false,
  "_id": "next-with-apollo@3.2.0",
  "_location": "/next-with-apollo",
  "_nodeVersion": "10.7.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/next-with-apollo_3.2.0_1538435338348_0.27230218200163714"
  },
  "_npmUser": {
    "name": "lfades",
    "email": "luisito453@gmail.com"
  },
  "_npmVersion": "6.1.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "next-with-apollo@^3.1.3",
    "scope": null,
    "escapedName": "next-with-apollo",
    "name": "next-with-apollo",
    "rawSpec": "^3.1.3",
    "spec": ">=3.1.3 <4.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/next-with-apollo/-/next-with-apollo-3.2.0.tgz",
  "_shasum": "aa9c37ab30858dbf1dae9accc1381c83a5e5a60f",
  "_shrinkwrap": null,
  "_spec": "next-with-apollo@^3.1.3",
  "_where": "/Users/thoriqnurfaizal/Documents/GitHub/AdvancedReact/Frontend",
  "author": {
    "name": "lfades"
  },
  "bugs": {
    "url": "https://github.com/lfades/next-with-apollo/issues"
  },
  "dependencies": {
    "isomorphic-unfetch": "^3.0.0",
    "prop-types": "^15.6.2",
    "react-apollo": "^2.2.3"
  },
  "description": "Apollo HOC for Next.js",
  "devDependencies": {
    "@types/graphql": "14.0.1",
    "@types/jest": "^23.3.2",
    "@types/next": "^7.0.0",
    "@types/node": "^10.11.3",
    "@types/prop-types": "^15.5.6",
    "@types/react": "^16.4.14",
    "apollo-client": "^2.4.2",
    "graphql": "14.0.2",
    "jest": "^23.6.0",
    "next": "^7.0.1",
    "prettier": "^1.14.3",
    "react": "^16.5.2",
    "react-dom": "^16.5.2",
    "ts-jest": "^23.10.3",
    "tslint": "^5.10.0",
    "tslint-config-prettier": "^1.12.0",
    "tslint-eslint-rules": "^5.2.0",
    "tslint-plugin-prettier": "^2.0.0",
    "typescript": "^3.1.1"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-54dx4652ytnEg5T1+IXsPyo11mxFyeIP/qflFaGRCSBQMVSZXsbU67rVMpSxiKEnC/ZKTKshFjmF1OeqI1uaYg==",
    "shasum": "aa9c37ab30858dbf1dae9accc1381c83a5e5a60f",
    "tarball": "https://registry.npmjs.org/next-with-apollo/-/next-with-apollo-3.2.0.tgz",
    "fileCount": 36,
    "unpackedSize": 53888,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbsqkLCRA9TVsSAnZWagAAc0IP/RMq/LnRGZyiH3zf6VGi\n+DZfZB+SoYfZ+iWOuvuJ2iGlT5Lqh0SzHrmfuTWom4U08CWPNhFkyGmXoPD7\n/VgakIkgZ8XxZyaASwEN0tL7fTh+m/jW8XgN19pPWlwZi5UNhe5/vJtvIxom\nLUno7zucJhtcWcBb0ZN6GH22UcnCqi91OUM9H6RSCXdfXsaKmtQPxVHp8T+C\nQOA5ChAZ2f9//aY0oMXU9h3UNvd+ehhgOcNs79GWiDuKqOBe86VvzqkVV75C\n3fvPZj0AWPDYVIZVCL6CYNomFm6xISkw41pJTfukiy/l4iv003rbmSh5h1tE\nhb6piIEdfV/c5IotthplsfsAlJjpbTiNifNuaL/sU7683uF+fHeHLDcAqnEn\nSG8IG8asgP2V1xZy69aBDIKRCNleOUK0znz9ZZ7rRbneWEeEmLxqxBhjX9tD\nHwkK4+FNMiCBHiv2kY/t0jObcF2Xc2ijbhH92bTtQHNAmf6Aq9S3npwdvNyZ\nwH+abbdTjXhDrl1kjkwsUCCW8BVVUX/4lpMszcJw5sbzMuLat1K8uv161yRf\nXiPqyQzKOm5jL4PFs4igoZw16sSMWotmtT5ZyI/l9LT5qceA96dEgWSuTAmM\nwiSBlukYvqHRLP/zqkvnNlXCimmUxPpXMmcuQ5nys8wyBKgYUPGg1H1lMb9E\nQR96\r\n=qfov\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "c6ea8a968f6e70a7c0bd6992e3f9ee86799fb4c0",
  "homepage": "https://github.com/lfades/next-with-apollo#readme",
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "lfades",
      "email": "luisito453@gmail.com"
    }
  ],
  "name": "next-with-apollo",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": "^15.0.0 || ^16.0.0",
    "next": "^6.0.0 || ^7.0.0"
  },
  "prettier": {
    "singleQuote": true
  },
  "readme": "# next-with-apollo\n\nApollo HOC for Next.js, this docs are for Next > 6, for Next < 5  go [here](./README_V1.MD) and use the version 1.0\n\n## How to use\n\nInstall the package with npm\n\n```sh\nnpm install next-with-apollo\n```\n\nor with yarn\n\n```sh\nyarn add next-with-apollo\n```\n\nCreate the HOC using a basic setup and [apollo-boost](https://github.com/apollographql/apollo-client/tree/master/packages/apollo-boost)\n\n```js\n// lib/withApollo.js\nimport withApollo from 'next-with-apollo'\nimport ApolloClient from 'apollo-boost'\nimport { GRAPHQL_URL } from '../configs'\n\nexport default withApollo(({ headers }) => (\n  new ApolloClient({ uri: GRAPHQL_URL })\n))\n```\n\n> `withApollo` accepts a function that receives `{ headers }` and returns an `ApolloClient`, keep in mind `headers` are SSR only\n\nWrap Next's `App` in `pages/_app.js`\n\n```js\nimport App, { Container } from 'next/app'\nimport { ApolloProvider } from 'react-apollo'\nimport withApollo from '../lib/withApollo'\n\nclass MyApp extends App {\n  render() {\n    const { Component, pageProps, apollo } = this.props;\n\n    return (\n      <Container>\n        <ApolloProvider client={apollo}>\n          <Component {...pageProps} />\n        </ApolloProvider>\n      </Container>\n    );\n  }\n}\n\nexport default withApollo(MyApp)\n```\n\nNow every page in `pages/` can use anything from `react-apollo`!\n\n> Note: [apollo-boost](https://github.com/apollographql/apollo-client/tree/master/packages/apollo-boost) is used in this example because is the fastest way to create an `ApolloClient`, but is not required.\n>\n> Previously this package had some configs to create an `ApolloClient`, those were removed but you can see an example of how to create the same `ApolloClient` yourself [here](https://github.com/lfades/next-with-apollo/issues/13#issuecomment-390289449)\n\n**withApollo** can also receive some options as second parameter:\n\n| Key | Type | Default | Note |\n| --- | ---- | ------- | ---- |\n| `getDataFromTree` |  `string` | `always` | Should the apollo store be hydrated before the first render ?, allowed values are `always`, `never` or `ssr` (don't hydrate on client side navigation)\n\nUsage example:\n\n```js\nexport default withApollo(\n  () => new ApolloClient({ uri: GRAPHQL_URL }),\n  {\n    getDataFromTree: 'always'\n  }\n)\n```\n\n## How it works\n\n`next-with-apollo` will create a Higher-Order Component (HOC) with your configuration that can be used in `pages/_app` to wrap an `ApolloClient` to any Next page, it will also fetch your queries before the first page load to [hydrate the store](https://dev-blog.apollodata.com/how-server-side-rendering-works-with-react-apollo-20f31b0c7348)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/lfades/next-with-apollo.git"
  },
  "scripts": {
    "build": "yarn build-ts",
    "build-ts": "tsc",
    "fix": "tslint -p tsconfig.json --fix",
    "jest": "jest",
    "prepublishOnly": "yarn build && yarn test",
    "test": "yarn tslint && jest --coverage",
    "tslint": "tslint -c tslint.json -p tsconfig.json -t codeFrame",
    "watch": "tsc -w"
  },
  "types": "lib/index.d.ts",
  "version": "3.2.0"
}
